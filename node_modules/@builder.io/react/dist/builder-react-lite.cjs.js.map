{"version":3,"file":"builder-react-lite.cjs.js","sources":["../src/scripts/init-editing.ts","../src/constants/device-sizes.constant.ts","../src/functions/set.ts","../src/functions/safe-dynamic-require.ts","../src/functions/string-to-function.ts","../src/store/builder-async-requests.ts","../src/store/builder-store.ts","../src/functions/apply-patch-with-mutation.ts","../src/functions/block-to-html-string.ts","../src/components/Link.tsx","../src/components/builder-block.component.tsx","../src/components/builder-blocks.component.tsx","../src/components/no-wrap.tsx","../src/components/variants-provider.component.tsx","../src/components/builder-content.component.tsx","../lib/on-change.js","../src/functions/debonce-next-tick.ts","../src/functions/throttle.ts","../src/store/builder-meta.ts","../src/components/builder-component.component.tsx","../src/functions/with-children.tsx","../src/builder-react-lite.ts"],"sourcesContent":["import { version } from '../../package.json';\n\nif (typeof window !== 'undefined') {\n  window.parent?.postMessage(\n    {\n      type: 'builder.isReactSdk',\n      data: {\n        value: true,\n        supportsPatchUpdates: 'v3',\n        priorVersion: version,\n      },\n    },\n    '*'\n  );\n}\n","export type Size = 'large' | 'medium' | 'small' | 'xsmall';\nexport const sizeNames: Size[] = ['xsmall', 'small', 'medium', 'large'];\n\n// TODO: put in @builder.io/core\nexport const sizes = {\n  xsmall: {\n    min: 0,\n    default: 0,\n    max: 0,\n  },\n  small: {\n    min: 320,\n    default: 321,\n    max: 640,\n  },\n  medium: {\n    min: 641,\n    default: 642,\n    max: 991,\n  },\n  large: {\n    min: 990,\n    default: 991,\n    max: 1200,\n  },\n  getWidthForSize(size: Size) {\n    return this[size].default;\n  },\n  getSizeForWidth(width: number) {\n    for (const size of sizeNames) {\n      const value = this[size];\n      if (width <= value.max) {\n        return size;\n      }\n    }\n    return 'large';\n  },\n};\n","export const set = (obj: any, _path: string | string[], value: any) => {\n  if (Object(obj) !== obj) {\n    return obj;\n  }\n  const path: string[] = Array.isArray(_path)\n    ? _path\n    : (_path.toString().match(/[^.[\\]]+/g) as string[]);\n\n  path\n    .slice(0, -1)\n    .reduce(\n      (a, c, i) =>\n        Object(a[c]) === a[c]\n          ? a[c]\n          : (a[c] = Math.abs(Number(path[i + 1])) >> 0 === +path[i + 1] ? [] : {}),\n      obj\n    )[path[path.length - 1]] = value;\n  return obj;\n};\n","'use strict';\n\nimport { Builder } from '@builder.io/sdk';\n\n// Allow us to require things dynamically safe from webpack bundling\nexport const safeDynamicRequire: typeof require = Builder.isServer\n  ? eval('require')\n  : ((() => null) as any);\n","import { Builder, builder } from '@builder.io/sdk';\nimport { safeDynamicRequire } from './safe-dynamic-require';\n\nconst fnCache: { [key: string]: BuilderEvanFunction | undefined } = {};\n\ntype BuilderEvanFunction = (\n  state: object,\n  event?: Event | undefined | null,\n  block?: any,\n  builder?: Builder,\n  Device?: any,\n  update?: Function | null,\n  _Builder?: typeof Builder,\n  context?: object\n) => any;\n\nexport const api = (state: any) => builder;\n\nexport function stringToFunction(\n  str: string,\n  expression = true,\n  errors?: Error[],\n  logs?: string[]\n): BuilderEvanFunction {\n  /* TODO: objedct */\n  if (!str || !str.trim()) {\n    return () => undefined;\n  }\n\n  const cacheKey = str + ':' + expression;\n  if (fnCache[cacheKey]) {\n    return fnCache[cacheKey]!;\n  }\n\n  // FIXME: gross hack\n  const useReturn =\n    (expression &&\n      !(str.includes(';') || str.includes(' return ') || str.trim().startsWith('return '))) ||\n    str.trim().startsWith('builder.run');\n  let fn: Function = () => {\n    /* intentionally empty */\n  };\n\n  try {\n    // tslint:disable-next-line:no-function-constructor-with-string-args\n    if (Builder.isBrowser) {\n      // TODO: use strict and eval\n      fn = new Function(\n        'state',\n        'event',\n        'block',\n        'builder',\n        'Device',\n        'update',\n        'Builder',\n        'context',\n        // TODO: remove the with () {} - make a page v3 that doesn't use this\n        // Or only do if can't find state\\s*\\. anywhere hm\n        `\n          var names = [\n            'state',\n            'event',\n            'block',\n            'builder',\n            'Device',\n            'update',\n            'Builder',\n            'context'\n          ];\n          var rootState = state;\n          if (typeof Proxy !== 'undefined') {\n            rootState = new Proxy(rootState, {\n              set: function () {\n                return false;\n              },\n              get: function (target, key) {\n                if (names.includes(key)) {\n                  return undefined;\n                }\n                return target[key];\n              }\n            });\n          }\n          /* Alias */\n          var ctx = context;\n          with (rootState) {\n            ${useReturn ? `return (${str});` : str};\n          }\n        `\n      );\n    }\n  } catch (error) {\n    if (errors) {\n      errors.push(error);\n    }\n    const message = error && error.message;\n    if (message && typeof message === 'string') {\n      if (logs && logs.indexOf(message) === -1) {\n        logs.push(message);\n      }\n    }\n    if (Builder.isBrowser) {\n      console.warn(`Function compile error in ${str}`, error);\n    }\n  }\n\n  const final = (...args: any[]) => {\n    try {\n      if (Builder.isBrowser) {\n        return fn(...args);\n      } else {\n        // TODO: memoize on server\n        // TODO: use something like this instead https://www.npmjs.com/package/rollup-plugin-strip-blocks\n        // There must be something more widely used?\n        // TODO: regex for between comments instead so can still type check the code... e.g. //SERVER-START ... code ... //SERVER-END\n        // Below is a hack to get certain code to *only* load in the server build, to not screw with\n        // browser bundler's like rollup and webpack. Our rollup plugin strips these comments only\n        // for the server build\n        // TODO: cache these for better performancs with new VmScript\n        // tslint:disable:comment-format\n        const { VM } = safeDynamicRequire('vm2');\n        const [state, event] = args;\n        return new VM({\n          timeout: 100,\n          sandbox: {\n            ...state,\n            ...{ state },\n            ...{ builder: api },\n            event,\n          },\n        }).run(str.replace(/(^|;)return /, '$1'));\n        // tslint:enable:comment-format\n      }\n    } catch (error) {\n      if (Builder.isBrowser) {\n        console.warn(\n          'Builder custom code error:',\n          error.message || error,\n          'in',\n          str,\n          error.stack || error\n        );\n      } else {\n        if (process.env.DEBUG) {\n          console.debug(\n            'Builder custom code error:',\n            error.message || error,\n            'in',\n            str,\n            error.stack || error\n          );\n        }\n      }\n      if (errors) {\n        errors.push(error);\n      }\n    }\n  };\n\n  if (Builder.isBrowser) {\n    fnCache[cacheKey] = final;\n  }\n\n  return final;\n}\n","import React from 'react';\n\nexport interface RequestInfo {\n  promise: Promise<any>;\n  url?: string;\n}\n\nexport type RequestOrPromise = RequestInfo | Promise<any>;\n\nexport const isPromise = (thing: RequestOrPromise): thing is Promise<any> =>\n  typeof (thing as any).then === 'function';\nexport const isRequestInfo = (thing: RequestOrPromise): thing is RequestInfo => !isPromise(thing);\n\nexport const BuilderAsyncRequestsContext = React.createContext({\n  requests: [] as RequestOrPromise[],\n  errors: [] as Error[],\n  logs: [] as string[],\n});\n","import React from 'react';\n\nexport const BuilderStoreContext = React.createContext<BuilderStore>({\n  state: {},\n  rootState: {},\n  content: {},\n  context: {},\n  update: (mutator: (state: any) => any) => null,\n});\n\nexport interface BuilderStore {\n  state: any;\n  rootState: any;\n  content: any;\n  context: any;\n  update: (mutator: (state: any) => any) => any;\n  renderLink?: (props: React.AnchorHTMLAttributes<any>) => React.ReactNode;\n}\n","export const applyPatchWithMinimalMutationChain = (\n  obj: any,\n  patch: { path: string; op: 'add' | 'remove' | 'replace'; value: any },\n  preserveRoot = true\n) => {\n  if (Object(obj) !== obj) {\n    return obj;\n  }\n  const { path, op, value } = patch;\n  const pathArr: string[] = path.split(/\\//);\n  if (pathArr[0] === '') {\n    pathArr.shift();\n  }\n\n  const newObj = preserveRoot ? obj : { ...obj };\n  let objPart = newObj;\n  for (let i = 0; i < pathArr.length; i++) {\n    const isLast = i === pathArr.length - 1;\n    const property = pathArr[i];\n    if (isLast) {\n      if (op === 'replace') {\n        objPart[property] = value;\n      } else if (op === 'add') {\n        const index = Number(property);\n        if (Array.isArray(objPart)) {\n          if (property === '-') {\n            objPart.push(value);\n          } else {\n            objPart.splice(index, 0, value);\n          }\n        } else {\n          objPart[property] = value;\n        }\n      } else if (op === 'remove') {\n        const index = Number(property);\n        if (Array.isArray(objPart)) {\n          objPart.splice(index, 1);\n        } else {\n          delete objPart[property];\n        }\n      }\n    } else {\n      const nextProperty = pathArr[i + 1];\n      const newPart =\n        Object(objPart[property]) === objPart[property]\n          ? objPart[property]\n          : String(Number(nextProperty)) === nextProperty\n          ? []\n          : {};\n      objPart = objPart[property] = Array.isArray(newPart) ? [...newPart] : { ...newPart };\n    }\n  }\n\n  return newObj;\n};\n","import { BuilderElement } from '@builder.io/sdk';\n\nexport const htmlEscape = (str: string) =>\n  str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\n// TODO: handle self closing tags\n// TODO: how allow components (e.g. react components) in templates?\nexport const blockToHtmlString = (block: BuilderElement): string =>\n  `<${htmlEscape(block.tagName || 'div')} \n    class=\"builder-block ${block.id} ${block.class || ''}\"\n    builder-id=\"${block.id}\"\n  ${Object.keys(block.properties || {})\n    .map(key => `${htmlEscape(key)}=\"${htmlEscape(block.properties![key])}\"`)\n    .join(' ')}\n  >${\n    block?.component?.name === 'Text'\n      ? block.component.options.text\n      : block.children\n      ? block.children.map(item => blockToHtmlString(item)).join('')\n      : ''\n  }</${block.tagName || 'div'}>`.replace(/\\s+/g, ' ');\n","import React from 'react';\nimport { BuilderStoreContext } from '../store/builder-store';\n/**\n * Link component should be used instead of an anchor tag in our components,\n * this is to allow our users to override anchor tags in\n * case they're using a routing Lib that requires using their\n * custom Link component (e.g Next, Gatsby, React Router)\n * <BuilderComponent renderLink=(props) => <myCustomLink {...props} /> />\n */\nexport const Link: React.SFC<React.AnchorHTMLAttributes<HTMLAnchorElement>> = props => (\n  <BuilderStoreContext.Consumer>\n    {context => {\n      if (context.renderLink) {\n        return context.renderLink(props);\n      }\n      return <a {...props} />;\n    }}\n  </BuilderStoreContext.Consumer>\n);\n","/** @jsx jsx */\n\nimport { Builder, builder, BuilderElement, Component } from '@builder.io/sdk';\nimport { ClassNames, jsx } from '@emotion/core';\nimport React from 'react';\nimport { Size, sizeNames, sizes } from '../constants/device-sizes.constant';\nimport { set } from '../functions/set';\nimport { api, stringToFunction } from '../functions/string-to-function';\nimport { BuilderAsyncRequestsContext, RequestOrPromise } from '../store/builder-async-requests';\nimport { BuilderStoreContext } from '../store/builder-store';\nimport { applyPatchWithMinimalMutationChain } from '../functions/apply-patch-with-mutation';\nimport { blockToHtmlString } from '../functions/block-to-html-string';\nimport { Link } from './Link';\n\nconst camelCaseToKebabCase = (str?: string) =>\n  str ? str.replace(/([A-Z])/g, g => `-${g[0].toLowerCase()}`) : '';\n\nconst kebabCaseToCamelCase = (str = '') =>\n  str.replace(/-([a-z])/g, match => match[1].toUpperCase());\n\nconst Device = { desktop: 0, tablet: 1, mobile: 2 };\nconst blocksMap: Record<string, BuilderElement> = {};\n\nconst voidElements = new Set([\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n  'textarea', // In React, we want to treat this as void (no children, otherwise React throws errors)\n]);\n\nconst last = <T extends any>(arr: T[]) => arr[arr.length - 1];\n\nfunction omit(obj: any, values: string[]) {\n  const newObject = Object.assign({}, obj);\n  for (const key of values) {\n    delete newObject[key];\n  }\n  return newObject;\n}\n\nconst cssCase = (property: string) => {\n  if (!property) {\n    return property;\n  }\n\n  let str = camelCaseToKebabCase(property);\n\n  if (property[0] === property[0].toUpperCase()) {\n    str = '-' + str;\n  }\n\n  return str;\n};\n\n// TODO: pull from builer internal utils\nconst fastClone = (obj: object) => JSON.parse(JSON.stringify(obj));\n\n// TODO: share these types in shared\ntype ElementType = any;\n\nexport interface BuilderBlockProps {\n  fieldName?: string;\n  block: BuilderElement;\n  // TODO:\n  // block: BuilderElement\n  child?: boolean;\n  index?: number;\n  size?: Size;\n  emailMode?: boolean;\n  // TODO: use context\n}\n\nfunction capitalize(str: string) {\n  if (!str) {\n    return;\n  }\n  return str[0].toUpperCase() + str.slice(1);\n}\n\ninterface BuilderBlockState {\n  state: any;\n  rootState: any;\n  context: any;\n  update: Function;\n}\n\nexport class BuilderBlock extends React.Component<\n  BuilderBlockProps,\n  { hasError: boolean; updates: number }\n> {\n  private _asyncRequests?: RequestOrPromise[];\n  private _errors?: Error[];\n  private _logs?: string[];\n\n  state = {\n    hasError: false,\n    updates: 0,\n  };\n\n  private privateState: BuilderBlockState = {\n    state: {},\n    rootState: {},\n    context: {},\n    update: () => {\n      /* Intentionally empty */\n    },\n  };\n\n  get store() {\n    return this.privateState;\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error('Builder block error:', error, errorInfo);\n  }\n\n  // TODO: handle adding return if none provided\n  // TODO: cache/memoize this (globally with LRU?)\n  stringToFunction(str: string, expression = true) {\n    return stringToFunction(str, expression, this._errors, this._logs);\n  }\n\n  get block() {\n    return blocksMap[this.props.block.id!] || this.props.block;\n  }\n\n  get emotionCss() {\n    let initialAnimationStepStyles: any;\n    const { block } = this;\n    if (Builder.isServer) {\n      const animation = block.animations && block.animations[0];\n      if (animation && animation.trigger !== 'hover') {\n        const firstStep = animation && animation.steps && animation.steps[0];\n        const stepStyles = firstStep && firstStep.styles;\n        if (stepStyles) {\n          initialAnimationStepStyles = stepStyles;\n        }\n      }\n    }\n\n    const reversedNames = sizeNames.slice().reverse();\n    const self = this.block;\n    const styles: any = {};\n    if (self.responsiveStyles) {\n      for (const size of reversedNames) {\n        if (size === 'large') {\n          if (!this.props.emailMode) {\n            styles[`&.builder-block`] = Object.assign(\n              {},\n              self.responsiveStyles[size],\n              initialAnimationStepStyles\n            );\n          }\n        } else {\n          styles[`@media only screen and (max-width: ${sizes[size].max}px)`] = {\n            '&.builder-block': self.responsiveStyles[size],\n          };\n        }\n      }\n    }\n\n    const hoverAnimation =\n      block.animations && block.animations.find(item => item.trigger === 'hover');\n    if (hoverAnimation) {\n      styles[':hover'] = hoverAnimation.steps?.[1]?.styles || {};\n      // TODO: if manually has set transition property deal with that\n      // TODO: only include properties explicitly set in the animation\n      // using Object.keys(styles)\n      styles.transition = `all ${hoverAnimation.duration}s ${camelCaseToKebabCase(\n        hoverAnimation.easing\n      )}`;\n      if (hoverAnimation.delay) {\n        styles.transitionDelay = hoverAnimation.delay + 's';\n      }\n    }\n\n    return styles;\n  }\n\n  eval(str: string) {\n    const fn = this.stringToFunction(str);\n    // TODO: only one root instance of this, don't rewrap every time...\n    return fn(\n      this.privateState.state,\n      undefined,\n      this.block,\n      builder,\n      Device,\n      this.privateState.update,\n      Builder,\n      this.privateState.context\n    );\n  }\n\n  componentWillUnmount() {\n    if (Builder.isEditing) {\n      removeEventListener('message', this.onWindowMessage);\n    }\n  }\n\n  onWindowMessage = (event: MessageEvent) => {\n    const message = event.data;\n    if (!message) {\n      return;\n    }\n    switch (message.type) {\n      case 'builder.selectionChange': {\n        const { data } = message;\n        if (!data) {\n          break;\n        }\n        const { selection } = data;\n        const id = this.block && this.block.id;\n        if (id && Array.isArray(selection) && selection.indexOf(id) > -1) {\n          setTimeout(() => {\n            (window as any).$block = this;\n            if (!(window as any).$blocks) {\n              (window as any).$blocks = [];\n            }\n            (window as any).$blocks.push(this);\n          });\n        }\n        break;\n      }\n\n      case 'builder.patchUpdates': {\n        const { data } = message;\n        if (!(data && data.data)) {\n          break;\n        }\n        const patches = data.data[this.block.id!];\n        if (!patches) {\n          return;\n        }\n\n        if (location.href.includes('builder.debug=true')) {\n          this.eval('debugger');\n        }\n        let newBlock = { ...this.block };\n        for (const patch of patches) {\n          // TODO: soehow mark this.block as a new object,\n          // e.g. access it's parent hm. maybe do the listning mutations\n          // on hte parent element not the child (or rather\n          // send the message to the parent)\n          applyPatchWithMinimalMutationChain(newBlock, patch);\n        }\n        blocksMap[this.props.block.id!] = newBlock;\n        this.setState({ updates: this.state.updates + 1 });\n\n        break;\n      }\n    }\n  };\n\n  componentDidMount() {\n    const block = this.block;\n    const animations = block && block.animations;\n\n    if (Builder.isEditing) {\n      addEventListener('message', this.onWindowMessage);\n    }\n\n    // tslint:disable-next-line:comment-format\n    ///REACT15ONLY if (this.ref) { this.ref.setAttribute('builder-id', block.id); }\n\n    if (animations) {\n      const options = {\n        animations: fastClone(animations),\n      };\n\n      // TODO: listen to Builder.editingMode and bind animations when editing\n      // and unbind when not\n      // TODO: apply bindings first\n      if (block.bindings) {\n        for (const key in block.bindings) {\n          if (!key.trim?.()) {\n            continue;\n          }\n\n          if (key.startsWith('animations.')) {\n            // TODO: this needs to run in getElement bc of local state per element for repeats\n            const value = this.stringToFunction(block.bindings[key]);\n            if (value !== undefined) {\n              set(\n                options,\n                key,\n                value(\n                  this.privateState.state,\n                  null,\n                  block,\n                  builder,\n                  null,\n                  null,\n                  Builder,\n                  this.privateState.context\n                )\n              );\n            }\n          }\n        }\n      }\n      Builder.animator.bindAnimations(\n        options.animations\n          .filter((item: any) => item.trigger !== 'hover')\n          .map((animation: any) => ({\n            ...animation,\n            elementId: this.block.id,\n          }))\n      );\n    }\n  }\n\n  // <!-- Builder Blocks --> in comments hmm\n  getElement(index = 0, state = this.privateState.state): React.ReactNode {\n    const { child, fieldName } = this.props;\n    const block = this.block;\n    let TagName: string | typeof Link = (block.tagName || 'div').toLowerCase();\n\n    if (TagName === 'template') {\n      const html = block.children\n        ? block.children.map(item => blockToHtmlString(item)).join(' ')\n        : '';\n      console.debug('template html', html);\n      return (\n        // React has an undesired behavior (for us) for template tags, so we must\n        // turn the contents into a string\n        <template\n          {...block.properties}\n          dangerouslySetInnerHTML={{\n            __html: html,\n          }}\n        />\n      );\n    }\n\n    let InnerComponent: any;\n    const componentName =\n      block.component && (block.component.name || (block.component as any).component);\n    let componentInfo: Component | null = null;\n    if (block.component && !(block.component as any).class) {\n      if (block.component && block.component.tag) {\n        InnerComponent = block.component.tag;\n      } else {\n        componentInfo = Builder.components.find(item => item.name === componentName) || null;\n        if (componentInfo && componentInfo.class) {\n          InnerComponent = componentInfo.class;\n        } else if (componentInfo && componentInfo.tag) {\n          InnerComponent = componentInfo.tag;\n        } else {\n          if (componentName?.startsWith('Builder:')) {\n            console.warn(\n              `Missing @builder.io/widgets installation, please install and import @builder.io/widgets to use ${\n                componentName.split(':')[1]\n              } in your content, more info here: https://github.com/BuilderIO/builder/tree/main/packages/widgets`\n            );\n          } else if (componentName) {\n            console.warn(\n              `Missing registration for ${componentName}, have you included the registration in your bundle?`\n            );\n          }\n        }\n      }\n    }\n\n    const TextTag: any = 'span';\n\n    let options: any = {\n      // Attributes?\n      ...block.properties,\n      style: {}, // this.styles\n    };\n\n    options = {\n      ...options.properties,\n      ...options,\n    };\n\n    if (block.component) {\n      options.component = fastClone(block.component);\n    }\n\n    // Binding should be properties to href or href?\n    // Manual style editor show bindings\n    // Show if things bound in overlays hmm\n    if (block.bindings) {\n      for (const key in block.bindings) {\n        if (!key.trim?.()) {\n          continue;\n        }\n\n        const value = this.stringToFunction(block.bindings[key]);\n        // TODO: pass block, etc\n        set(\n          options,\n          key,\n          value(state, null, block, api(state), Device, null, Builder, this.privateState.context)\n        );\n      }\n    }\n\n    if (options.hide) {\n      return null;\n    } else {\n      delete options.hide;\n    }\n    // TODO: UI for this\n    if (('show' in options || (block.bindings && block.bindings.show)) && !options.show) {\n      return null;\n    } else {\n      delete options.show;\n    }\n\n    if (block.actions) {\n      for (const key in block.actions) {\n        if (!key.trim?.()) {\n          continue;\n        }\n\n        const value = block.actions[key];\n        options['on' + capitalize(key)] = (event: any) => {\n          let useState = state;\n          if (typeof Proxy !== 'undefined') {\n            useState = new Proxy(state, {\n              set: (obj, prop, value) => {\n                obj[prop] = value;\n                this.privateState.rootState[prop] = value;\n                return true;\n              },\n            });\n          }\n          const fn = this.stringToFunction(value, false);\n          // TODO: only one root instance of this, don't rewrap every time...\n          return fn(\n            useState,\n            event,\n            this.block,\n            builder,\n            Device,\n            this.privateState.update,\n            Builder,\n            this.privateState.context\n          );\n        };\n      }\n    }\n\n    const innerComponentProperties = (options.component || options.options) && {\n      ...options.options,\n      ...(options.component.options || options.component.data),\n    };\n\n    const isVoid = voidElements.has(TagName);\n\n    const noWrap = componentInfo && (componentInfo.fragment || componentInfo.noWrap);\n\n    const styleStr =\n      options.attr?.style || (typeof options.style === 'string' ? options.style : '') || '';\n\n    if (typeof styleStr === 'string') {\n      if (typeof options.style !== 'object') {\n        options.style = {};\n      }\n\n      const styleSplit = styleStr.split(';');\n      for (const pair of styleSplit) {\n        const stylePieces = pair.split(':');\n        if (!stylePieces.length) {\n          return;\n        }\n\n        let [key, value] = stylePieces;\n\n        if (stylePieces.length > 2) {\n          value = stylePieces.slice(1).join(':');\n        }\n\n        options.style[kebabCaseToCamelCase(key)] = value;\n      }\n    }\n\n    const finalOptions: { [key: string]: string } = {\n      ...omit(options, ['class', 'component', 'attr']),\n      [typeof TagName === 'string' && !TagName.includes('-') ? 'className' : 'class']:\n        `builder-block ${this.id}${block.class ? ` ${block.class}` : ''}${\n          block.component && !(['Image', 'Video', 'Banner'].indexOf(componentName) > -1)\n            ? ` builder-has-component`\n            : ''\n        }` +\n        (options.class ? ' ' + options.class : '') +\n        (Builder.isEditing && this.privateState.state._spacer?.parent === block.id\n          ? ' builder-spacer-parent'\n          : ''),\n      key: this.id + index,\n      'builder-id': this.id,\n      // ...(state && state.$index && typeof state.$index === 'number'\n      //   ? {\n      // TODO: ONLY include on repeat!\n      // TODO: what if dymically repeated by another component like tabs... may not work.\n      // need function to provide that right\n      ...(index !== 0 && {\n        'builder-index': index, // String(state.$index)\n      }),\n      //   }\n      // : null)\n    };\n\n    // tslint:disable-next-line:comment-format\n    ///REACT15ONLY finalOptions.className = finalOptions.class\n\n    if (Builder.isEditing) {\n      // TODO: removed bc JS can add styles inline too?\n      (finalOptions as any)['builder-inline-styles'] = !(options.attr && options.attr.style)\n        ? ''\n        : Object.keys(options.style).reduce(\n            (memo, key) => (memo ? `${memo};` : '') + `${cssCase(key)}:${options.style[key]};`,\n            ''\n          );\n    }\n\n    if (\n      (((finalOptions as any).properties && (finalOptions as any).properties.href) ||\n        (finalOptions as any).href) &&\n      TagName === 'div'\n    ) {\n      TagName = 'a';\n    }\n\n    if (TagName === 'a') {\n      TagName = Link;\n    }\n    // const css = this.css\n\n    // const styleTag = css.trim() && (\n    //   <style className=\"builder-style\">\n    //     {(InnerComponent && !isBlock ? `.${this.id} > * { height: 100%; width: 100%; }` : '') +\n    //       this.css}\n    //   </style>\n    // )\n\n    const children = block.children || finalOptions.children || [];\n\n    // TODO: test it out\n    return (\n      <React.Fragment>\n        {/* <InsertSpacer id={block.id!} position=\"before\" /> */}\n        <ClassNames>\n          {({ css, cx }) => {\n            if (!this.props.emailMode) {\n              const addClass = ' ' + css(this.emotionCss);\n              if (finalOptions.class) {\n                finalOptions.class += addClass;\n              }\n              if (finalOptions.className) {\n                finalOptions.className += addClass;\n              }\n            }\n\n            return (\n              <BuilderAsyncRequestsContext.Consumer>\n                {value => {\n                  this._asyncRequests = value && value.requests;\n                  this._errors = value && value.errors;\n                  this._logs = value && value.logs;\n                  return isVoid ? (\n                    <TagName {...finalOptions} />\n                  ) : InnerComponent && (noWrap || this.props.emailMode) ? (\n                    // TODO: pass the class to be easier\n                    // TODO: acceptsChildren option?\n                    <InnerComponent\n                      // Final options maaay be wrong here hm\n                      {...innerComponentProperties}\n                      // should really call this builderAttributes bc people can name a\n                      // componet input \"attributes\"\n                      attributes={finalOptions}\n                      builderBlock={block}\n                      builderState={this.privateState}\n                    />\n                  ) : (\n                    <TagName {...(finalOptions as any)}>\n                      {InnerComponent && (\n                        <InnerComponent\n                          builderState={this.privateState}\n                          builderBlock={block}\n                          {...innerComponentProperties}\n                        />\n                      )}\n                      {(block as any).text || options.text\n                        ? options.text\n                        : !InnerComponent && children && Array.isArray(children) && children.length\n                        ? children.map((block: ElementType, index: number) => (\n                            <BuilderBlock\n                              key={((this.id as string) || '') + index}\n                              block={block}\n                              index={index}\n                              size={this.props.size}\n                              fieldName={this.props.fieldName}\n                              child={this.props.child}\n                              emailMode={this.props.emailMode}\n                            />\n                          ))\n                        : null}\n                    </TagName>\n                  );\n                }}\n              </BuilderAsyncRequestsContext.Consumer>\n            );\n          }}\n        </ClassNames>\n        {/* <InsertSpacer id={block.id!} position=\"after\" /> */}\n      </React.Fragment>\n    );\n  }\n\n  get id() {\n    const { block } = this;\n    if (!block.id!.startsWith('builder')) {\n      return 'builder-' + block.id;\n    }\n    return block.id!;\n  }\n\n  contents(state: BuilderBlockState) {\n    const block = this.block;\n\n    // this.setState(state);\n    this.privateState = state;\n\n    if (block.repeat && block.repeat.collection) {\n      const collectionPath = block.repeat.collection;\n      const collectionName = last((collectionPath || '').trim().split('(')[0].trim().split('.'));\n      const itemName = block.repeat.itemName || (collectionName ? collectionName + 'Item' : 'item');\n      const array = this.stringToFunction(collectionPath)(\n        state.state,\n        null,\n        block,\n        api(state),\n        Device,\n        null,\n        Builder,\n        this.privateState.context\n      );\n      if (Array.isArray(array)) {\n        return array.map((data, index) => {\n          // TODO: Builder state produce the data\n          const childState = {\n            ...state.state,\n            $index: index,\n            $item: data,\n            [itemName]: data,\n            [`$${itemName}Index`]: index,\n          };\n\n          return (\n            <BuilderStoreContext.Provider\n              key={index}\n              value={{ ...state, state: childState } as any}\n            >\n              {this.getElement(index, childState)}\n            </BuilderStoreContext.Provider>\n          );\n        });\n      }\n      return null;\n    }\n\n    return this.getElement();\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <span\n          css={{\n            display: 'inline-block',\n            padding: 5,\n            color: '#999',\n            fontSize: 11,\n            fontStyle: 'italic',\n          }}\n        >\n          Builder block error :( Check console for details\n        </span>\n      );\n    }\n    return (\n      <BuilderStoreContext.Consumer>{value => this.contents(value)}</BuilderStoreContext.Consumer>\n    );\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport React from 'react';\nimport { Builder } from '@builder.io/sdk';\nimport { BuilderBlock } from './builder-block.component';\n// TODO: fetch these for user and send them with same response like graphql\nimport { Size } from '../constants/device-sizes.constant';\nimport ReactDOM from 'react-dom';\nimport { BuilderStoreContext } from '../store/builder-store';\n\nexport interface BuilderBlocksProps {\n  fieldName?: string;\n  // TODO: block type (ElementType[])\n  blocks?: any[] | React.ReactNode;\n  child?: boolean;\n  // TODO: use new react context for this to pass window size all the way down\n  size?: Size;\n  style?: React.CSSProperties;\n  parentElementId?: string;\n  parent?: any;\n  dataPath?: string;\n  className?: string;\n  emailMode?: boolean;\n}\n\ninterface BuilderBlocksState {\n  // width: number\n}\n\n// TODO: options to set direciotn\nexport class BuilderBlocks extends React.Component<BuilderBlocksProps, BuilderBlocksState> {\n  get isRoot() {\n    return !this.props.child;\n  }\n\n  get noBlocks() {\n    const { blocks } = this.props;\n    return !(blocks && (blocks as any).length); // TODO: allow react nodes\n  }\n  get path() {\n    const pathPrefix = 'component.options.';\n    let path = this.props.dataPath || '';\n    const thisPrefix = 'this.';\n    if (path.trim()) {\n      if (path.startsWith(thisPrefix)) {\n        path = path.replace(thisPrefix, '');\n      } else if (!path.startsWith(pathPrefix)) {\n        path = pathPrefix + path;\n      }\n    }\n    return path;\n  }\n\n  get parentId() {\n    if (this.props.parentElementId) {\n      return this.props.parentElementId;\n    }\n    return this.props.parent && this.props.parent.id;\n  }\n\n  onClickEmptyBlocks = () => {\n    if (Builder.isIframe && this.noBlocks) {\n      window.parent?.postMessage(\n        {\n          type: 'builder.clickEmptyBlocks',\n          data: {\n            parentElementId: this.parentId,\n            dataPath: this.path,\n          },\n        },\n        '*'\n      );\n    }\n  };\n  onHoverEmptyBlocks = () => {\n    if (Builder.isEditing && this.noBlocks) {\n      window.parent?.postMessage(\n        {\n          type: 'builder.hoverEmptyBlocks',\n          data: {\n            parentElementId: this.parentId,\n            dataPath: this.path,\n          },\n        },\n        '*'\n      );\n    }\n  };\n\n  // <!-- Builder Blocks --> in comments hmm\n  render() {\n    const { blocks } = this.props;\n\n    const TagName = this.props.emailMode ? 'span' : 'div';\n\n    // TODO: how deep check this automatically for mobx... hmmm optional / peer dependency?\n    return (\n      // TODO: component <Stack direction=\"vertical\">\n      // TODO: react.fragment instead?\n      <TagName\n        className={\n          'builder-blocks' +\n          (this.noBlocks ? ' no-blocks' : '') +\n          (this.props.child ? ' builder-blocks-child' : '') +\n          (this.props.className ? ' ' + this.props.className : '')\n        }\n        builder-type=\"blocks\"\n        // TODO: only fi in iframe?\n        builder-path={Builder.isIframe ? this.path : undefined}\n        builder-parent-id={this.parentId}\n        css={{\n          ...(!this.props.emailMode && {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'stretch',\n          }),\n          ...this.props.style,\n        }}\n        onClick={() => {\n          if (this.noBlocks) {\n            this.onClickEmptyBlocks();\n          }\n        }}\n        {...(Builder.isEditing && {\n          onMouseEnter: () => this.onHoverEmptyBlocks(),\n        })}\n      >\n        {/* TODO: if is react node (for react compatibility) render it */}\n        {/* TODO: maybe don't do this to preserve blocks always editable */}\n        {(blocks &&\n          Array.isArray(blocks) &&\n          (blocks as any[]).map((block, index) =>\n            block && block['@type'] === '@builder.io/sdk:Element' ? (\n              <BuilderBlock\n                key={block.id}\n                block={block}\n                index={index}\n                fieldName={this.props.fieldName}\n                child={this.props.child}\n                emailMode={this.props.emailMode}\n              />\n            ) : (\n              block\n            )\n          )) ||\n          blocks}\n      </TagName>\n    );\n  }\n\n  static renderInto(\n    elementOrSelector: string | HTMLElement,\n    props: BuilderBlocksProps = {},\n    builderState: any\n  ) {\n    if (!elementOrSelector) {\n      return;\n    }\n\n    let element: Element | null = null;\n\n    if (typeof elementOrSelector === 'string') {\n      element = document.querySelector(elementOrSelector);\n    } else {\n      if (elementOrSelector instanceof Element) {\n        element = elementOrSelector;\n      }\n    }\n    return ReactDOM.render(\n      <BuilderStoreContext.Provider value={builderState}>\n        <BuilderBlocks {...props} />\n      </BuilderStoreContext.Provider>,\n      element\n    );\n  }\n}\n","import React from 'react';\n\nexport const NoWrap = (props: React.ComponentPropsWithoutRef<any>) => props.children;\n","import * as React from 'react';\nimport { builder, Builder, BuilderContent, BuilderContentVariation } from '@builder.io/sdk';\n\nfunction getData(content: BuilderContentVariation) {\n  if (typeof content?.data === 'undefined') {\n    return undefined;\n  }\n\n  const { blocks, blocksString } = content.data;\n  const hasBlocks = Array.isArray(blocks) || typeof blocksString === 'string';\n  const newData: any = {\n    ...content.data,\n    ...(hasBlocks && { blocks: blocks || JSON.parse(blocksString) }),\n  };\n\n  delete newData.blocksString;\n  return newData;\n}\n\nconst variantsScript = (variantsString: string, contentId: string) =>\n  `\n(function() {\n  if (window.builderNoTrack) {\n    return;\n  }\n\n  var variants = ${variantsString};\n  function removeVariants() {\n    variants.forEach(function (template) {\n      document.querySelector('template[data-template-variant-id=\"' + template.id + '\"]').remove();\n    });\n  }\n\n  if (typeof document.createElement(\"template\").content === 'undefined') {\n    removeVariants();\n    return ;\n  }\n\n  function setCookie(name,value,days) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\" + \"; Secure; SameSite=None\";\n  }\n\n  function getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n  }\n  var cookieName = 'builder.tests.${contentId}';\n  var variantInCookie = getCookie(cookieName);\n  var availableIDs = variants.map(function(vr) { return vr.id }).concat('${contentId}');\n  var variantId;\n  if (availableIDs.indexOf(variantInCookie) > -1) {\n    variantId = variantInCookie;\n  }\n  if (!variantId) {\n    var n = 0;\n    var random = Math.random();\n    for (var i = 0; i < variants.length; i++) {\n      var variant = variants[i];\n      var testRatio = variant.testRatio;\n      n += testRatio;\n      if (random < n) {\n        setCookie(cookieName, variant.id);\n        variantId = variant.id;\n        break;\n      }\n    }\n    if (!variantId) {\n      variantId = \"${contentId}\";\n      setCookie(cookieName, \"${contentId}\");\n    }\n  }\n  if (variantId && variantId !== \"${contentId}\") {\n    var winningTemplate = document.querySelector('template[data-template-variant-id=\"' + variantId + '\"]');\n    if (winningTemplate) {\n      var parentNode = winningTemplate.parentNode;\n      var newParent = parentNode.cloneNode(false);\n      newParent.appendChild(winningTemplate.content.firstChild);\n      parentNode.parentNode.replaceChild(newParent, parentNode);\n    }\n  } else if (variants.length > 0) {\n    removeVariants();\n  }\n})()`.replace(/\\s+/g, ' ');\n\ninterface VariantsProviderProps {\n  initialContent: BuilderContent;\n  children: (variants: BuilderContent[], renderScript?: () => JSX.Element) => JSX.Element;\n}\n\nexport const VariantsProvider: React.SFC<VariantsProviderProps> = ({\n  initialContent,\n  children,\n}) => {\n  if (Builder.isBrowser && !builder.canTrack) {\n    return children([initialContent]);\n  }\n\n  const hasTests = Boolean(Object.keys(initialContent?.variations || {}).length);\n\n  if (!hasTests) return children([initialContent]);\n\n  const variants: BuilderContent[] = Object.keys(initialContent.variations!).map(id => ({\n    id,\n    ...initialContent.variations![id],\n    data: getData(initialContent.variations![id]!),\n  }));\n\n  const allVariants = [...variants, initialContent];\n  if (Builder.isServer) {\n    const variantsJson = JSON.stringify(\n      Object.keys(initialContent.variations || {}).map(item => ({\n        id: item,\n        testRatio: initialContent.variations![item]!.testRatio,\n      }))\n    );\n    const renderScript = () => (\n      <script\n        dangerouslySetInnerHTML={{\n          __html: variantsScript(variantsJson, initialContent.id!),\n        }}\n      ></script>\n    );\n\n    // render all variants on the server side\n    return <React.Fragment>{children(allVariants, renderScript)}</React.Fragment>;\n  }\n\n  const cookieName = `builder.tests.${initialContent.id}`;\n\n  let variantId = builder.getCookie(cookieName);\n\n  if (!variantId && Builder.isBrowser) {\n    let n = 0;\n    const random = Math.random();\n    for (let i = 0; i < variants.length; i++) {\n      const variant = variants[i];\n      const testRatio = variant.testRatio;\n      n += testRatio!;\n      if (random < n) {\n        builder.setCookie(cookieName, variant.id);\n        variantId = variant.id;\n        break;\n      }\n    }\n  }\n\n  if (!variantId) {\n    // render initial content when no winning variation or on the server\n    variantId = initialContent.id;\n    builder.setCookie(cookieName, variantId);\n  }\n\n  return children([allVariants.find(item => item.id === variantId)!]);\n};\n","import React from 'react';\nimport {\n  builder,\n  Subscription,\n  GetContentOptions,\n  Builder,\n  BuilderContent as Content,\n} from '@builder.io/sdk';\nimport { NoWrap } from './no-wrap';\nimport { applyPatchWithMinimalMutationChain } from '../functions/apply-patch-with-mutation';\nimport { VariantsProvider } from './variants-provider.component';\n\nexport type BuilderContentProps<ContentType> = {\n  /**\n   * Callback to run when content is fetched and loaded.\n   */\n  contentLoaded?: (data: any, content: any) => void;\n  /**\n   * Callback to run if an error occurred while fetching content.\n   */\n  contentError?: (error: any) => void;\n  options?: GetContentOptions;\n  children: (content: ContentType, loading?: boolean, fullData?: any) => React.ReactNode;\n  /**\n   * Only render what was explicitly passed in via `content` - don't fetch from\n   * the Builder API.\n   *\n   * @see content\n   */\n  inline?: boolean;\n  /**\n   * @package\n   * @deprecated\n   */\n  dataOnly?: boolean;\n  /**\n   * @package\n   * Pass in a specific builder instance to use instead of the default\n   * singleton.\n   */\n  builder?: Builder;\n  /**\n   * @deprecated and unnecessary\n   */\n  isStatic?: boolean;\n  /**\n   * Builder content object to use instead of fetching from the API.\n   *\n   * Required if `inline` is set to `true`.\n   */\n  content?: Content;\n} & ({ model: string } | { modelName: string }); // model and modelName are aliases of the same thing¸\n\n/**\n * When passed content json explicitly it'll calculate a/b tests on the content\n * and pass the winning variation down to the children function. If then content\n * prop was omitted it'll try to fetch matching content from your Builder\n * account based on the default user attributes and model.\n */\nexport class BuilderContent<ContentType extends object = any> extends React.Component<\n  BuilderContentProps<ContentType>\n> {\n  ref: HTMLDivElement | null = null;\n\n  get builder() {\n    return this.props.builder || builder;\n  }\n  get name() {\n    const props = this.props;\n\n    if ('model' in props) {\n      return props.model;\n    } else {\n      return props.modelName;\n    }\n  }\n\n  get renderedVariantId() {\n    const id = this.props.isStatic\n      ? this.builder.getCookie(`builder.tests.${this.data?.id}`)\n      : this.data?.variationId;\n    if (id !== null) {\n      return id;\n    }\n  }\n\n  get options() {\n    let options = {\n      ...(this.props.options || ({} as GetContentOptions)),\n    };\n    if (!options.key && this.props.content?.id) {\n      options.key = this.props.content.id;\n    }\n    if (this.props.content && !options.initialContent?.length) {\n      options.initialContent = [this.props.content];\n    }\n\n    return options;\n  }\n\n  get data() {\n    const content: Content =\n      ((this.props.inline || !Builder.isBrowser || this.firstLoad) &&\n        this.options.initialContent &&\n        this.options.initialContent[0]) ||\n      this.state.data;\n\n    return getContentWithInfo(content);\n  }\n\n  state = {\n    loading: !this.props.content,\n    data: getContentWithInfo(this.props.content),\n    updates: 1,\n  };\n\n  onWindowMessage = (event: MessageEvent) => {\n    const message = event.data;\n    if (!message) {\n      return;\n    }\n    switch (message.type) {\n      case 'builder.patchUpdates': {\n        if (this.props.options?.noEditorUpdates) {\n          return;\n        }\n        const { data } = message;\n        if (!(data && data.data)) {\n          break;\n        }\n        const patches = data.data[this.state.data?.id!];\n        if (!(patches && patches.length)) {\n          return;\n        }\n\n        if (location.href.includes('builder.debug=true')) {\n          eval('debugger');\n        }\n        for (const patch of patches) {\n          applyPatchWithMinimalMutationChain(this.state.data, patch);\n        }\n        this.setState({\n          updates: this.state.updates + 1,\n          data: this.state.data ? { ...this.state.data } : this.state.data,\n        });\n        if (this.props.contentLoaded) {\n          this.props.contentLoaded(this.state.data?.data, this.state.data);\n        }\n\n        break;\n      }\n    }\n  };\n\n  subscriptions = new Subscription();\n\n  firstLoad = true;\n  clicked = false;\n  trackedImpression = false;\n\n  intersectionObserver: IntersectionObserver | null = null;\n\n  // TODO: observe model name for changes\n  componentDidMount() {\n    // Temporary to test metrics diving in with bigquery and heatmaps\n    // this.builder.autoTrack = true;\n    // this.builder.env = 'development';\n    if (!this.props.inline || Builder.isEditing) {\n      this.subscribeToContent();\n    } else if (this.props.inline && this.options?.initialContent?.length) {\n      const contentData = this.options.initialContent[0];\n      // TODO: intersectionobserver like in subscribetocontent - reuse the logic\n      if (contentData?.id) {\n        this.builder.trackImpression(contentData.id, this.renderedVariantId, undefined, {\n          content: contentData,\n        });\n      }\n    }\n\n    if (Builder.isEditing) {\n      addEventListener('message', this.onWindowMessage);\n    }\n\n    /// REACT15ONLY if (this.ref) { this.ref.setAttribute('builder-model', this.name); }\n  }\n\n  subscribeToContent() {\n    if (this.name !== '_inline') {\n      // TODO:... using targeting...? express.request hmmm\n      this.subscriptions.add(\n        builder.queueGetContent(this.name, this.options).subscribe(\n          matches => {\n            const match = matches && matches[0];\n            this.setState({\n              data: match,\n              loading: false,\n            });\n\n            if (match && this.firstLoad) {\n              this.firstLoad = false;\n              // TODO: autoTrack\n              if (builder.autoTrack && !Builder.isEditing) {\n                let addedObserver = false;\n                if (typeof IntersectionObserver === 'function' && this.ref) {\n                  try {\n                    const observer = (this.intersectionObserver = new IntersectionObserver(\n                      (entries, observer) => {\n                        entries.forEach(entry => {\n                          // In view\n                          if (entry.intersectionRatio > 0 && !this.trackedImpression) {\n                            this.builder.trackImpression(\n                              match.id!,\n                              this.renderedVariantId,\n                              undefined,\n                              {\n                                content: this.data,\n                              }\n                            ),\n                              { content: this.data };\n                            this.trackedImpression = true;\n                            if (this.ref) {\n                              observer.unobserve(this.ref);\n                            }\n                          }\n                        });\n                      }\n                    ));\n\n                    observer.observe(this.ref);\n                    addedObserver = true;\n                  } catch (err) {\n                    console.warn('Could not bind intersection observer');\n                  }\n                }\n                if (!addedObserver) {\n                  this.trackedImpression = true;\n                  this.builder.trackImpression(match.id!, this.renderedVariantId, undefined, {\n                    content: match,\n                  });\n                }\n              }\n            }\n            if (this.props.contentLoaded) {\n              this.props.contentLoaded(match && match.data, match);\n            }\n          },\n          error => {\n            if (this.props.contentError) {\n              this.props.contentError(error);\n              this.setState({\n                loading: false,\n              });\n            }\n          }\n        )\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (Builder.isEditing) {\n      removeEventListener('message', this.onWindowMessage);\n    }\n\n    this.subscriptions.unsubscribe();\n    if (this.intersectionObserver && this.ref) {\n      this.intersectionObserver.unobserve(this.ref);\n    }\n  }\n\n  onClick = (reactEvent: React.MouseEvent<HTMLElement>) => {\n    // TODO: viewport scrolling tracking for impression events\n    const event = reactEvent.nativeEvent;\n\n    const content = this.data;\n    if (!content) {\n      return;\n    }\n    if (builder.autoTrack) {\n      this.builder.trackInteraction(content.id!, this.renderedVariantId, this.clicked, event, {\n        content,\n      });\n    }\n    if (!this.clicked) {\n      this.clicked = true;\n    }\n  };\n\n  render() {\n    if (this.props.dataOnly) {\n      return null;\n    }\n    const { loading } = this.state;\n\n    const useData: any = this.data;\n    const TagName = this.props.dataOnly ? NoWrap : 'div';\n    return (\n      <VariantsProvider initialContent={useData}>\n        {(variants, renderScript) => {\n          return (\n            <React.Fragment>\n              {variants.map((content, index) => {\n                // default Variation is at the end, wrap the rest with template\n                // TODO: IE11 don't support templates\n                const Tag = index === variants.length - 1 ? React.Fragment : 'template';\n                return (\n                  <React.Fragment key={String(content?.id! + index)}>\n                    {Tag !== 'template' && renderScript?.()}\n                    <Tag\n                      key={String(content?.id! + index)}\n                      {...(Tag === 'template' && {\n                        'data-template-variant-id': content?.id,\n                      })}\n                    >\n                      <TagName\n                        {...(index === 0 &&\n                          !this.props.dataOnly && {\n                            ref: (ref: any) => (this.ref = ref),\n                          })}\n                        className=\"builder-content\"\n                        onClick={this.onClick}\n                        builder-content-id={content?.id}\n                        builder-model={this.name}\n                      >\n                        {this.props.children(\n                          content?.data! as any,\n                          this.props.inline ? false : loading,\n                          useData\n                        )}\n                      </TagName>\n                    </Tag>\n                  </React.Fragment>\n                );\n              })}\n            </React.Fragment>\n          );\n        }}\n      </VariantsProvider>\n    );\n  }\n}\n\nexport const getContentWithInfo = (content?: Content) => {\n  if (content) {\n    const cookieValue = builder.getCookie(`builder.tests.${content.id}`);\n    const cookieVariation =\n      cookieValue === content.id ? content : content.variations?.[cookieValue];\n    const variationName =\n      cookieVariation?.name || (cookieVariation?.id === content.id ? 'Default variation' : '');\n\n    return {\n      ...content,\n      variationId: cookieValue,\n      testVariationId: cookieValue,\n      testVariationName: variationName,\n    };\n  }\n  return null;\n};\n","// Via https://github.com/sindresorhus/on-change but\n// compiled for ES5\n\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n('use strict');\nvar PATH_SEPARATOR = '.';\nvar TARGET = Symbol('target');\nvar UNSUBSCRIBE = Symbol('unsubscribe');\nvar isPrimitive = function (value) {\n  return value === null || (typeof value !== 'object' && typeof value !== 'function');\n};\nvar isBuiltinWithoutMutableMethods = function (value) {\n  return value instanceof RegExp || value instanceof Number;\n};\nvar isBuiltinWithMutableMethods = function (value) {\n  return value instanceof Date;\n};\nvar concatPath = function (path, property) {\n  if (property && property.toString) {\n    if (path) {\n      path += PATH_SEPARATOR;\n    }\n    path += property.toString();\n  }\n  return path;\n};\nvar walkPath = function (path, callback) {\n  var index;\n  while (path) {\n    index = path.indexOf(PATH_SEPARATOR);\n    if (index === -1) {\n      index = path.length;\n    }\n    callback(path.slice(0, index));\n    path = path.slice(index + 1);\n  }\n};\nvar shallowClone = function (value) {\n  if (Array.isArray(value)) {\n    return value.slice();\n  }\n  return Object.assign({}, value);\n};\nvar onChange = function (object, onChange, options) {\n  if (typeof Proxy === 'undefined') {\n    // TODO: use immer? or a technique like immer to diff maybe\n    return object;\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  var proxyTarget = Symbol('ProxyTarget');\n  var inApply = false;\n  var changed = false;\n  var applyPath;\n  var applyPrevious;\n  var isUnsubscribed = false;\n  var equals = options.equals || Object.is;\n  var propCache = new WeakMap();\n  var pathCache = new WeakMap();\n  var proxyCache = new WeakMap();\n  var handleChange = function (path, property, previous, value) {\n    if (isUnsubscribed) {\n      return;\n    }\n    if (!inApply) {\n      onChange(concatPath(path, property), value, previous);\n      return;\n    }\n    if (\n      inApply &&\n      applyPrevious &&\n      previous !== undefined &&\n      value !== undefined &&\n      property !== 'length'\n    ) {\n      var item_1 = applyPrevious;\n      if (path !== applyPath) {\n        path = path.replace(applyPath, '').slice(1);\n        walkPath(path, function (key) {\n          item_1[key] = shallowClone(item_1[key]);\n          item_1 = item_1[key];\n        });\n      }\n      item_1[property] = previous;\n    }\n    changed = true;\n  };\n  var getOwnPropertyDescriptor = function (target, property) {\n    var props = propCache ? propCache.get(target) : undefined;\n    if (props) {\n      return props;\n    }\n    props = new Map();\n    propCache.set(target, props);\n    var prop = props.get(property);\n    if (!prop) {\n      prop = Reflect.getOwnPropertyDescriptor(target, property);\n      props.set(property, prop);\n    }\n    return prop;\n  };\n  var invalidateCachedDescriptor = function (target, property) {\n    var props = propCache ? propCache.get(target) : undefined;\n    if (props) {\n      props.delete(property);\n    }\n  };\n  var buildProxy = function (value, path) {\n    if (isUnsubscribed) {\n      return value;\n    }\n    pathCache.set(value, path);\n    var proxy = proxyCache.get(value);\n    if (proxy === undefined) {\n      proxy = new Proxy(value, handler);\n      proxyCache.set(value, proxy);\n    }\n    return proxy;\n  };\n  var unsubscribe = function (target) {\n    isUnsubscribed = true;\n    propCache = null;\n    pathCache = null;\n    proxyCache = null;\n    return target;\n  };\n  var ignoreChange = function (property) {\n    return isUnsubscribed || (options.ignoreSymbols === true && typeof property === 'symbol');\n  };\n  var handler = {\n    get: function (target, property, receiver) {\n      if (property === proxyTarget || property === TARGET) {\n        return target;\n      }\n      if (property === UNSUBSCRIBE && pathCache.get(target) === '') {\n        return unsubscribe(target);\n      }\n      var value = Reflect.get(target, property, receiver);\n      if (\n        isPrimitive(value) ||\n        isBuiltinWithoutMutableMethods(value) ||\n        property === 'constructor' ||\n        options.isShallow === true\n      ) {\n        return value;\n      }\n      // Preserve invariants\n      var descriptor = getOwnPropertyDescriptor(target, property);\n      if (descriptor && !descriptor.configurable) {\n        if (descriptor.set && !descriptor.get) {\n          return undefined;\n        }\n        if (descriptor.writable === false) {\n          return value;\n        }\n      }\n      return buildProxy(value, concatPath(pathCache.get(target), property));\n    },\n    set: function (target, property, value, receiver) {\n      if (value && value[proxyTarget] !== undefined) {\n        value = value[proxyTarget];\n      }\n      var ignore = ignoreChange(property);\n      var previous = ignore ? null : Reflect.get(target, property, receiver);\n      var result = Reflect.set(target[proxyTarget] || target, property, value);\n      if (!ignore && !equals(previous, value)) {\n        handleChange(pathCache.get(target), property, previous, value);\n      }\n      return result;\n    },\n    defineProperty: function (target, property, descriptor) {\n      var result = Reflect.defineProperty(target, property, descriptor);\n      if (!ignoreChange(property)) {\n        invalidateCachedDescriptor(target, property);\n        handleChange(pathCache.get(target), property, undefined, descriptor.value);\n      }\n      return result;\n    },\n    deleteProperty: function (target, property) {\n      if (!Reflect.has(target, property)) {\n        return true;\n      }\n      var ignore = ignoreChange(property);\n      var previous = ignore ? null : Reflect.get(target, property);\n      var result = Reflect.deleteProperty(target, property);\n      if (!ignore) {\n        invalidateCachedDescriptor(target, property);\n        handleChange(pathCache.get(target), property, previous);\n      }\n      return result;\n    },\n    apply: function (target, thisArg, argumentsList) {\n      var compare = isBuiltinWithMutableMethods(thisArg);\n      if (compare) {\n        thisArg = thisArg[proxyTarget];\n      }\n      if (!inApply) {\n        inApply = true;\n        if (compare) {\n          applyPrevious = thisArg.valueOf();\n        }\n        if (Array.isArray(thisArg) || toString.call(thisArg) === '[object Object]') {\n          applyPrevious = shallowClone(thisArg[proxyTarget]);\n        }\n        applyPath = pathCache.get(target);\n        applyPath = applyPath.slice(0, Math.max(applyPath.lastIndexOf(PATH_SEPARATOR), 0));\n        var result = Reflect.apply(target, thisArg, argumentsList);\n        inApply = false;\n        if (changed || (compare && !equals(applyPrevious, thisArg.valueOf()))) {\n          handleChange(applyPath, '', applyPrevious, thisArg[proxyTarget] || thisArg);\n          applyPrevious = null;\n          changed = false;\n        }\n        return result;\n      }\n      return Reflect.apply(target, thisArg, argumentsList);\n    },\n  };\n  var proxy = buildProxy(object, '');\n  onChange = onChange.bind(proxy);\n  return proxy;\n};\nonChange.target = function (proxy) {\n  return proxy[TARGET] || proxy;\n};\nonChange.unsubscribe = function (proxy) {\n  return proxy[UNSUBSCRIBE] || proxy;\n};\nmodule.exports = onChange;\nexports.default = onChange;\n","import { Builder } from '@builder.io/sdk';\n\nconst nextTick = Builder.nextTick;\n\n// Plain function - e.g. const debounced = debounceNextTick(fn);\nexport function debounceNextTick(fn: (...args: any[]) => void): () => void;\n// Decorator - e.g. class Foo { @debounceNextTick myMethod() { ... } }\nexport function debounceNextTick(\n  target: any,\n  key: PropertyKey,\n  descriptor: PropertyDescriptor\n): PropertyDescriptor;\nexport function debounceNextTick(\n  target: object | ((...args: any[]) => void),\n  key?: PropertyKey,\n  descriptor?: PropertyDescriptor\n) {\n  if (typeof key === 'undefined' && typeof target === 'function') {\n    return debounceNextTickImpl(target as any);\n  }\n  return {\n    configurable: true,\n    enumerable: descriptor!.enumerable,\n    get: function getter(): any {\n      // Attach this function to the instance (not the class)\n      Object.defineProperty(this, key!, {\n        configurable: true,\n        enumerable: descriptor!.enumerable,\n        value: debounceNextTickImpl(descriptor!.value),\n      });\n\n      return (this as any)[key!];\n    },\n  } as PropertyDescriptor;\n}\n\nfunction debounceNextTickImpl(fn: (...args: any[]) => void) {\n  let args: any[] | null = null;\n  let context: any = null;\n\n  return debounced;\n\n  function debounced(this: any) {\n    const previous = args;\n    args = [].slice.call(arguments);\n    context = this;\n    if (previous !== null) return;\n    nextTick(next);\n  }\n\n  function next() {\n    fn.apply(context, args as any);\n    args = null;\n    context = null;\n  }\n}\n","export function throttle(func: Function, wait: number, options: any = {}) {\n  let context: any;\n  let args: any;\n  let result: any;\n  let timeout = null as any;\n  let previous = 0;\n  const later = function () {\n    previous = options.leading === false ? 0 : Date.now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n  return function (this: any) {\n    const now = Date.now();\n    if (!previous && options.leading === false) previous = now;\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n","import React from 'react';\n\nexport const BuilderMetaContext = React.createContext({\n  emailMode: false,\n  ampMode: false,\n  isServer: false,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsx, css } from '@emotion/core';\nimport { BuilderContent, getContentWithInfo } from './builder-content.component';\nimport { BuilderBlocks } from './builder-blocks.component';\nimport {\n  Builder,\n  GetContentOptions,\n  builder,\n  Subscription,\n  BehaviorSubject,\n  BuilderElement,\n  BuilderContent as Content,\n} from '@builder.io/sdk';\nimport { BuilderStoreContext } from '../store/builder-store';\nimport hash from 'hash-sum';\nimport onChange from '../../lib/on-change';\n\nexport { onChange };\n\nimport { sizes } from '../constants/device-sizes.constant';\nimport {\n  BuilderAsyncRequestsContext,\n  RequestOrPromise,\n  RequestInfo,\n  isRequestInfo,\n} from '../store/builder-async-requests';\nimport { Url } from 'url';\nimport { debounceNextTick } from '../functions/debonce-next-tick';\nimport { throttle } from '../functions/throttle';\nimport { safeDynamicRequire } from '../functions/safe-dynamic-require';\nimport { BuilderMetaContext } from '../store/builder-meta';\n\nfunction pick<T, K extends keyof T>(obj: T, ...keys: K[]): Pick<T, K> {\n  const ret: any = {};\n  keys.forEach(key => {\n    ret[key] = obj[key];\n  });\n  return ret;\n}\nfunction omit<T, K extends keyof T>(obj: T, ...keys: K[]): Omit<T, K> {\n  const ret: any = { ...obj };\n  keys.forEach(key => {\n    delete ret[key];\n  });\n  return ret;\n}\n\nconst wrapComponent = (info: any) => {\n  return (props: any) => {\n    // TODO: convention for all of this, like builderTagProps={{ style: {} foo: 'bar' }}\n    const Tag = props.builderTag || 'div';\n    const inputNames = ['children'].concat(\n      info.inputs?.map((item: any) => item.name as string) || []\n    );\n\n    const baseProps = omit(props, ...inputNames, 'attributes');\n    const inputProps = props; // pick(props, ...inputNames);\n\n    if (info.noWrap) {\n      return <info.class attributes={baseProps} {...inputProps} />;\n    }\n\n    return (\n      <Tag {...baseProps}>\n        <info.class {...inputProps} />\n      </Tag>\n    );\n  };\n};\n\nconst size = (thing: object) => Object.keys(thing).length;\n\nfunction debounce(func: Function, wait: number, immediate = false) {\n  let timeout: any;\n  return function (this: any) {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) func.apply(context, args);\n  };\n}\n\nconst fontsLoaded = new Set();\n\n// TODO: get fetch from core JS....\nconst fetch = Builder.isBrowser ? window.fetch : require('node-fetch');\n\nconst sizeMap = {\n  desktop: 'large',\n  tablet: 'medium',\n  mobile: 'small',\n};\n\nfunction decorator(fn: Function) {\n  return function argReceiver(...fnArgs: any[]) {\n    // Check if the decorator is being called without arguments (ex `@foo methodName() {}`)\n    if (fnArgs.length === 3) {\n      const [target, key, descriptor] = fnArgs;\n      if (descriptor && (descriptor.value || descriptor.get)) {\n        fnArgs = [];\n        return descriptorChecker(target, key, descriptor);\n      }\n    }\n\n    return descriptorChecker;\n\n    // descriptorChecker determines whether a method or getter is being decorated\n    // and replaces the appropriate key with the decorated function.\n    function descriptorChecker(target: any, key: any, descriptor: any) {\n      const descriptorKey = descriptor.value ? 'value' : 'get';\n      return {\n        ...descriptor,\n        [descriptorKey]: fn(descriptor[descriptorKey], ...fnArgs),\n      };\n    }\n  };\n}\n\nconst fetchCache: { [key: string]: any } = {};\n\nexport interface BuilderComponentProps {\n  /**\n   * @package\n   * @deprecated use {@link model} instead.\n   */\n  modelName?: string;\n  /**\n   * Name of the model this is rendering content for. Default is \"page\".\n   */\n  model?: string;\n  /**\n   * @package\n   * @deprecated use {@link model} instead.\n   */\n  name?: string;\n  /**\n   * Data is passed along as `state.*` to the component.\n   * @see {@link https://github.com/BuilderIO/builder/tree/master/packages/react#passing-data-and-functions-down}\n   *\n   * @example\n   * ```\n   * <BuilderComponent\n   *  model=\"page\"\n   *  data={{\n   *    products: productsList,\n   *    myFunction: () => alert('Triggered!'),\n   *    foo: 'bar'\n   *  }} >\n   * ```\n   */\n  data?: any;\n  /**\n   * Specific instance of Builder that should be used. You might use this for\n   * server side rendering. It's generally not recommended except for very\n   * advanced multi-tenant use cases.\n   */\n  builder?: Builder;\n  /**\n   * Content entry ID for this component to fetch client side\n   */\n  entry?: string;\n  /**\n   * @package\n   *\n   * Builder public API key.\n   *\n   * @see {@link builder.init()} for the preferred way of supplying your API key.\n   */\n  apiKey?: string;\n  /**\n   * @private\n   */\n  codegen?: boolean;\n  options?: GetContentOptions;\n  /**\n   * Function callback invoked with `data` and your content when it becomes\n   * available.\n   *\n   * @see {@link https://github.com/BuilderIO/builder/tree/master/packages/react#passing-data-and-functions-down}\n   */\n  contentLoaded?: (data: any, content: Content) => void;\n  /**\n   * Instead of having Builder render a link for you with plain anchor\n   * elements, use your own function. Useful when using Next.js, Gatsby, or\n   * other client side routers' custom `<Link>` components.\n   *\n   * ## Notes\n   *\n   * This must be a function that returns JSX, not a component!\n   *\n   * ## Examples\n   *\n   * @see {@link https://github.com/BuilderIO/builder/blob/0f0bc1ca835335f99fc21efb20ff3c4836bc9f41/examples/next-js-builder-site/src/functions/render-link.tsx#L6}\n   */\n  renderLink?: (props: React.AnchorHTMLAttributes<any>) => React.ReactNode;\n  /**\n   * Callback to run if an error occurred while fetching content.\n   */\n  contentError?: (error: any) => void;\n  /**\n   * Manually specify what Builder content JSON object to render. @see {@link\n   * https://github.com/BuilderIO/builder/tree/master/packages/react#passing-content-manually}\n   */\n  content?: Content;\n  /**\n   * @package\n   *\n   * Location object that provides the current url, path, etc; for server side\n   * rendering.\n   */\n  location?: Location | Url;\n  /**\n   * Callback to run when Builder state changes (e.g. state.foo = 'bar' in an\n   * action)\n   */\n  onStateChange?: (newData: any) => void;\n  /**\n   * @package\n   * @deprecated\n   */\n  noAsync?: boolean;\n  /**\n   * @package\n   *\n   * Flag to render email content (small differences in our render logic for\n   * email support).\n   */\n  emailMode?: boolean;\n  /**\n   * @package\n   *\n   * Flag to render amp content (small differences in our render logic for amp\n   * support)\n   */\n  ampMode?: boolean;\n  /**\n   * @package\n   *\n   * Render content in-line only (can't passed from the content prop) don't\n   * fetch content from our API.\n   */\n  inlineContent?: boolean;\n  /**\n   * @package\n   * @deprecated\n   */\n  builderBlock?: BuilderElement;\n  /**\n   * @package\n   * @deprecated\n   */\n  dataOnly?: boolean;\n  /**\n   * @package\n   * @deprecated\n   */\n  hydrate?: boolean;\n  /**\n   * @package\n   * @deprecated use {@link Builder.isStatic} instead\n   */\n  isStatic?: boolean;\n  /**\n   * Object that will be available in actions and bindings.\n   *\n   * @see {@link https://github.com/BuilderIO/builder/tree/master/packages/react#passing-data-and-functions-down}\n   */\n  context?: any;\n  /**\n   * @deprecated\n   */\n  url?: string;\n  /**\n   * Set to true if this is not the root content component, for instance for symbols\n   */\n  isChild?: boolean;\n  /**\n   * Set to true to not call `event.stopPropagation()` in the editor to avoid\n   * issues with client site routing triggering when editing in Builder, causing\n   * navigation to other pages unintended\n   */\n  stopClickPropagationWhenEditing?: boolean;\n}\n\nexport interface BuilderComponentState {\n  state: any;\n  update: (state: any) => any;\n  updates: number;\n  context: any;\n  key: number;\n}\n\nconst tryEval = (str?: string, data: any = {}, errors?: Error[]): any => {\n  const value = str;\n  if (!(typeof value === 'string' && value.trim())) {\n    return;\n  }\n  const useReturn = !(value.includes(';') || value.includes(' return '));\n  let fn: Function = () => {\n    /* Intentionally empty */\n  };\n  try {\n    if (Builder.isBrowser) {\n      // tslint:disable-next-line:no-function-constructor-with-string-args\n      // TODO: VM in node......\n      fn = new Function(\n        'state',\n        // TODO: remove the with () {} - make a page v3 that doesn't use this\n        `var rootState = state;\n        if (typeof Proxy !== 'undefined') {\n          rootState = new Proxy(rootState, {\n            set: function () {\n              return false;\n            },\n            get: function (target, key) {\n              if (key === 'state') {\n                return state;\n              }\n              return target[key]\n            }\n          });\n        }\n        with (rootState) {\n          ${useReturn ? `return (${str});` : str};\n        }`\n      );\n    }\n  } catch (error) {\n    if (Builder.isBrowser) {\n      console.warn('Could not compile javascript', error);\n    } else {\n      // Add to req.options.errors to return to client\n    }\n  }\n  try {\n    if (Builder.isBrowser) {\n      return fn(data || {});\n    } else {\n      // Below is a hack to get certain code to *only* load in the server build, to not screw with\n      // browser bundler's like rollup and webpack. Our rollup plugin strips these comments only\n      // for the server build\n      // tslint:disable:comment-format\n      const { VM } = safeDynamicRequire('vm2');\n      return new VM({\n        sandbox: {\n          ...data,\n          ...{ state: data },\n        },\n        // TODO: convert reutrn to module.exports on server\n      }).run(value.replace(/(^|;)return /, '$1'));\n      // tslint:enable:comment-format\n    }\n  } catch (error) {\n    if (errors) {\n      errors.push(error);\n    }\n\n    if (Builder.isBrowser) {\n      console.warn('Builder custom code error:', error.message, 'in', str, error.stack);\n    } else {\n      if (process.env.DEBUG) {\n        console.debug('Builder custom code error:', error.message, 'in', str, error.stack);\n      }\n      // Add to req.options.errors to return to client\n    }\n  }\n\n  return;\n};\n\nfunction searchToObject(location: Location | Url) {\n  const pairs = (location.search || '').substring(1).split('&');\n  const obj: { [key: string]: string } = {};\n\n  for (const i in pairs) {\n    if (!(pairs[i] && typeof pairs[i] === 'string')) {\n      continue;\n    }\n    const pair = pairs[i].split('=');\n    obj[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Responsible for rendering Builder content of type: 'page' or 'section' to\n * react components. It will attempt to fetch content from the API based on\n * defined user attributes (URL path, device type, and any custom targeting you set using `builder.setUserAttributes`) unless a `BuilderContent`\n * object is provided to `props.content`\n *\n * Use it to mount content in desired location, enable editing in place when\n * previewed in the editor.\n *\n * Supports server-side-rendering when passed the content json as\n * `props.content`.\n */\nexport class BuilderComponent extends React.Component<\n  BuilderComponentProps,\n  BuilderComponentState\n> {\n  static defaults: Pick<BuilderComponentProps, 'codegen'> = {\n    codegen: Boolean(Builder.isBrowser && location.href.includes('builder.codegen=true')),\n  };\n\n  subscriptions: Subscription = new Subscription();\n  // TODO: don't trigger initial one?\n  onStateChange = new BehaviorSubject<any>(null);\n  asServer = Builder.isServer;\n\n  contentRef: BuilderContent | null = null;\n\n  styleRef: HTMLStyleElement | null = null;\n\n  rootState = Builder.isServer ? {} : onChange({}, () => this.updateState());\n\n  lastJsCode = '';\n  lastHttpRequests: { [key: string]: string | undefined } = {};\n  httpSubscriptionPerKey: { [key: string]: Subscription | undefined } = {};\n\n  ref: HTMLElement | null = null;\n\n  Component: any;\n\n  get options() {\n    // TODO: for perf cache this\n    return {\n      ...BuilderComponent.defaults,\n      ...this.props,\n    };\n  }\n\n  get name(): string | undefined {\n    return this.props.model || this.props.modelName || this.props.name; // || this.props.model\n  }\n\n  private _asyncRequests?: RequestOrPromise[];\n  private _errors?: Error[];\n  private _logs?: string[];\n\n  get element() {\n    return this.ref;\n  }\n\n  get inlinedContent() {\n    if (this.isPreviewing && !this.props.inlineContent) {\n      return undefined;\n    }\n    return this.props.content;\n  }\n\n  constructor(props: BuilderComponentProps) {\n    super(props);\n\n    // TODO: pass this all the way down - symbols, etc\n    // this.asServer = Boolean(props.hydrate && Builder.isBrowser)\n\n    this.state = {\n      // TODO: should change if this prop changes\n      context: {\n        ...props.context,\n        apiKey: builder.apiKey || this.props.apiKey,\n      },\n      state: Object.assign(this.rootState, {\n        ...(this.inlinedContent && this.inlinedContent.data && this.inlinedContent.data.state),\n        isBrowser: Builder.isBrowser, // !this.asServer,\n        isServer: !Builder.isBrowser, // this.asServer,\n        _hydrate: props.hydrate,\n        location: this.locationState,\n        deviceSize: this.deviceSizeState,\n        // TODO: will user attributes be ready here?\n        device: this.device,\n        ...this.getHtmlData(),\n        ...props.data,\n      }),\n      updates: 0,\n      key: 0,\n      update: this.updateState,\n    };\n\n    if (Builder.isBrowser) {\n      const key = this.props.apiKey;\n      if (key && key !== this.builder.apiKey) {\n        this.builder.apiKey = key;\n      }\n\n      if (this.inlinedContent) {\n        // Sometimes with graphql we get the content as `content.content`\n        const content = (this.inlinedContent as any).content || this.inlinedContent;\n        this.onContentLoaded(content?.data, getContentWithInfo(content)!);\n      }\n    }\n  }\n\n  get builder() {\n    return this.props.builder || builder;\n  }\n\n  getHtmlData() {\n    const id = (this.inlinedContent && this.inlinedContent.id) || this.props.entry;\n    const script =\n      id &&\n      Builder.isBrowser &&\n      document.querySelector(\n        `script[data-builder-json=\"${id}\"],script[data-builder-state=\"${id}\"]`\n      );\n    if (script) {\n      try {\n        const json = JSON.parse((script as HTMLElement).innerText);\n        return json;\n      } catch (err) {\n        console.warn(\n          'Could not parse Builder.io HTML data transfer',\n          err,\n          (script as HTMLElement).innerText\n        );\n      }\n    }\n    return {};\n  }\n\n  // TODO: pass down with context\n  get device() {\n    return this.builder.getUserAttributes().device || 'desktop';\n  }\n\n  get locationState() {\n    return {\n      // TODO: handle this correctly on the server. Pass in with CONTEXT\n      ...pick(this.location, 'pathname', 'hostname', 'search', 'host'),\n      path: (this.location.pathname && this.location.pathname.split('/').slice(1)) || '',\n      query: searchToObject(this.location),\n    };\n  }\n\n  // TODO: trigger state change on screen size change\n  get deviceSizeState() {\n    // TODO: use context to pass this down on server\n    return Builder.isBrowser\n      ? sizes.getSizeForWidth(window.innerWidth)\n      : sizeMap[this.device] || 'large';\n  }\n\n  messageListener = (event: MessageEvent) => {\n    const info = event.data;\n    switch (info.type) {\n      case 'builder.updateSpacer': {\n        const data = info.data;\n        const currentSpacer = this.rootState._spacer;\n        this.updateState(state => {\n          state._spacer = data;\n        });\n        break;\n      }\n      case 'builder.resetState': {\n        const { state, model } = info.data;\n        if (model === this.name) {\n          for (const key in this.rootState) {\n            // TODO: support nested functions (somehow)\n            if (typeof this.rootState[key] !== 'function') {\n              delete this.rootState[key];\n            }\n          }\n          Object.assign(this.rootState, state);\n          this.setState({\n            ...this.state,\n            state: this.rootState,\n            updates: ((this.state && this.state.updates) || 0) + 1,\n          });\n        }\n        break;\n      }\n      case 'builder.resetSymbolState': {\n        const { state, model, id } = info.data.state;\n        if (this.props.builderBlock && this.props.builderBlock === id) {\n          for (const key in this.rootState) {\n            delete this.rootState[key];\n          }\n          Object.assign(this.rootState, state);\n          this.setState({\n            ...this.state,\n            state: this.rootState,\n            updates: ((this.state && this.state.updates) || 0) + 1,\n          });\n        }\n        break;\n      }\n    }\n  };\n\n  resizeFn = () => {\n    const deviceSize = this.deviceSizeState;\n    if (deviceSize !== this.state.state.deviceSize) {\n      this.setState({\n        ...this.state,\n        updates: ((this.state && this.state.updates) || 0) + 1,\n        state: Object.assign(this.rootState, {\n          ...this.state.state,\n          deviceSize,\n        }),\n      });\n    }\n  };\n\n  resizeListener = Builder.isEditing ? throttle(this.resizeFn, 200) : debounce(this.resizeFn, 400);\n\n  static renderInto(\n    elementOrSelector: string | HTMLElement,\n    props: BuilderComponentProps = {},\n    hydrate = true,\n    fresh = false\n  ) {\n    console.debug('BuilderPage.renderInto', elementOrSelector, props, hydrate, this);\n\n    if (!elementOrSelector) {\n      return;\n    }\n\n    let element: Element | null = null;\n\n    if (typeof elementOrSelector === 'string') {\n      element = document.querySelector(elementOrSelector);\n    } else {\n      if (elementOrSelector instanceof Element) {\n        element = elementOrSelector;\n      }\n    }\n\n    if (!element) {\n      return;\n    }\n\n    const exists = element.classList.contains('builder-hydrated');\n    if (exists && !fresh) {\n      console.debug('Tried to hydrate multiple times');\n      return;\n    }\n    element.classList.add('builder-hydrated');\n\n    let shouldHydrate = hydrate && element.innerHTML.includes('builder-block');\n\n    if (!element.classList.contains('builder-component')) {\n      // TODO: maybe remove any builder-api-styles...\n      const apiStyles =\n        element.querySelector('.builder-api-styles') ||\n        (element.previousElementSibling &&\n        element.previousElementSibling.matches('.builder-api-styles')\n          ? element.previousElementSibling\n          : null);\n      let keepStyles = '';\n      if (apiStyles) {\n        const html = apiStyles.innerHTML;\n        html.replace(\n          /\\/\\*start:([^\\*]+?)\\*\\/([\\s\\S]*?)\\/\\*end:([^\\*]+?)\\*\\//g,\n          (match, id, content) => {\n            let el: HTMLElement | null = null;\n            try {\n              el = document.querySelector(`[data-emotion-css=\"${id}\"]`);\n            } catch (err) {\n              console.warn(err);\n            }\n            if (el) {\n              el.innerHTML = content;\n            } else if (!Builder.isEditing) {\n              keepStyles += match;\n            }\n\n            return match;\n          }\n        );\n        // NextTick? or longer timeout?\n        Builder.nextTick(() => {\n          apiStyles.innerHTML = keepStyles;\n        });\n      }\n      const useElement = element.querySelector('.builder-component');\n      if (useElement) {\n        element = useElement;\n      } else {\n        shouldHydrate = false;\n      }\n    }\n\n    if (location.search.includes('builder.debug=true')) {\n      console.debug('hydrate', shouldHydrate, element);\n    }\n\n    let useEl = element;\n    if (!exists) {\n      const div = document.createElement('div');\n      element.insertAdjacentElement('beforebegin', div);\n      div.appendChild(element);\n      useEl = div;\n    }\n\n    if (Builder.isEditing || (Builder.isBrowser && location.search.includes('builder.preview='))) {\n      shouldHydrate = false;\n    }\n    if (shouldHydrate && element) {\n      // TODO: maybe hydrate again. Maybe...\n      const val = ReactDOM.render(\n        <BuilderComponent {...props} />,\n        useEl,\n        (useEl as any).builderRootRef\n      );\n      (useEl as any).builderRootRef = val;\n      return val;\n    }\n    const val = ReactDOM.render(\n      <BuilderComponent {...props} />,\n      useEl,\n      (useEl as any).builderRootRef\n    );\n    (useEl as any).builderRootRef = val;\n    return val;\n  }\n\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.asServer) {\n      this.asServer = false;\n      this.updateState(state => {\n        state.isBrowser = true;\n        state.isServer = false;\n      });\n    }\n\n    if (Builder.isIframe) {\n      window.parent?.postMessage(\n        { type: 'builder.sdkInjected', data: { modelName: this.name } },\n        '*'\n      );\n    }\n\n    if (Builder.isBrowser) {\n      // TODO: remove event on unload\n      window.addEventListener('resize', this.resizeListener);\n      if (Builder.isEditing) {\n        window.addEventListener('message', this.messageListener);\n      }\n\n      setTimeout(() => {\n        window.dispatchEvent(\n          new CustomEvent('builder:component:load', {\n            detail: {\n              ref: this,\n            },\n          })\n        );\n      });\n    }\n  }\n\n  updateState = (fn?: (state: any) => void) => {\n    const state = this.rootState;\n    if (fn) {\n      fn(state);\n    }\n    if (this.mounted) {\n      this.setState({\n        update: this.updateState,\n        state,\n        updates: ((this.state && this.state.updates) || 0) + 1,\n      });\n    } else {\n      this.state = {\n        ...this.state,\n        update: this.updateState,\n        state,\n        updates: ((this.state && this.state.updates) || 0) + 1,\n      };\n    }\n\n    this.notifyStateChange();\n  };\n\n  get isPreviewing() {\n    return (\n      (Builder.isServer || (Builder.isBrowser && Builder.isPreviewing)) &&\n      builder.previewingModel === this.name\n    );\n  }\n\n  @debounceNextTick\n  notifyStateChange() {\n    if (Builder.isServer) {\n      return;\n    }\n    if (!(this && this.state)) {\n      return;\n    }\n    const nextState = this.state.state;\n    // TODO: only run the below once per tick...\n    if (this.props.onStateChange) {\n      this.props.onStateChange(nextState);\n    }\n\n    if (Builder.isBrowser) {\n      window.dispatchEvent(\n        new CustomEvent('builder:component:stateChange', {\n          detail: {\n            state: nextState,\n            ref: this,\n          },\n        })\n      );\n    }\n    this.onStateChange.next(nextState);\n  }\n\n  processStateFromApi(state: { [key: string]: any }) {\n    return state; //  mapValues(state, value => tryEval(value, this.data, this._errors))\n  }\n\n  get location() {\n    return this.props.location || (Builder.isBrowser ? location : ({} as any));\n  }\n\n  getCssFromFont(font: any, data?: any) {\n    // TODO: compute what font sizes are used and only load those.......\n    const family = font.family + (font.kind && !font.kind.includes('#') ? ', ' + font.kind : '');\n    const name = family.split(',')[0];\n    const url = font.fileUrl ? font.fileUrl : font.files && font.files.regular;\n    let str = '';\n    if (url && family && name) {\n      str += `\n@font-face {\n  font-family: \"${family}\";\n  src: local(\"${name}\"), url('${url}') format('woff2');\n  font-display: fallback;\n  font-weight: 400;\n}\n        `.trim();\n    }\n\n    if (font.files) {\n      for (const weight in font.files) {\n        const isNumber = String(Number(weight)) === weight;\n        if (!isNumber) {\n          continue;\n        }\n        // TODO: maybe limit number loaded\n        const weightUrl = font.files[weight];\n        if (weightUrl && weightUrl !== url) {\n          str += `\n@font-face {\n  font-family: \"${family}\";\n  src: url('${weightUrl}') format('woff2');\n  font-display: fallback;\n  font-weight: ${weight};\n}\n          `.trim();\n        }\n      }\n    }\n    return str;\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n    if (Builder.isBrowser) {\n      window.removeEventListener('resize', this.resizeListener);\n      window.removeEventListener('message', this.messageListener);\n    }\n  }\n\n  getFontCss(data?: any) {\n    if (!this.builder.allowCustomFonts) {\n      return '';\n    }\n    // TODO: separate internal data from external\n    return (\n      (data?.customFonts &&\n        data.customFonts.length &&\n        data.customFonts.map((font: any) => this.getCssFromFont(font, data)).join(' ')) ||\n      ''\n    );\n  }\n\n  ensureFontsLoaded(data?: any) {\n    if (this.builder.allowCustomFonts && data?.customFonts && Array.isArray(data.customFonts)) {\n      for (const font of data.customFonts) {\n        const url = font.fileUrl ? font.fileUrl : font.files && font.files.regular;\n        if (!fontsLoaded.has(url)) {\n          const html = this.getCssFromFont(font, data);\n          fontsLoaded.add(url);\n          if (!html) {\n            continue;\n          }\n          const style = document.createElement('style');\n          style.className = 'builder-custom-font';\n          style.setAttribute('data-builder-custom-font', url);\n          style.innerHTML = html;\n          document.head.appendChild(style);\n        }\n      }\n    }\n  }\n\n  getCss(data?: any) {\n    const contentId = this.useContent?.id;\n    let cssCode = data?.cssCode || '';\n    if (contentId) {\n      // Allow using `&` in custom CSS code like @emotion\n      // E.g. `& .foobar { ... }` to scope CSS\n      // TODO: handle if '&' is within a string like `content: \"&\"`\n      cssCode = cssCode.replace(/&/g, `.builder-component-${contentId}`);\n    }\n\n    return cssCode + this.getFontCss(data);\n  }\n\n  get data() {\n    const data = {\n      ...(this.inlinedContent && this.inlinedContent.data?.state),\n      ...this.props.data,\n      ...this.state.state,\n    };\n    Object.assign(this.rootState, data);\n    return data;\n  }\n\n  componentDidUpdate(prevProps: BuilderComponentProps) {\n    // TODO: shallow diff\n    if (this.props.data && prevProps.data !== this.props.data) {\n      this.state.update((state: any) => {\n        Object.assign(state, this.props.data);\n      });\n    }\n\n    if (Builder.isEditing) {\n      if (this.inlinedContent && prevProps.content !== this.inlinedContent) {\n        this.onContentLoaded(this.inlinedContent.data, this.inlinedContent);\n      }\n    }\n  }\n\n  // FIXME: workaround to issue with CSS extraction and then hydration\n  // (might be preact only)\n  checkStyles(data: any) {\n    if (this.styleRef) {\n      const css = this.getCss(data);\n      if (this.styleRef.innerHTML !== css) {\n        this.styleRef.innerHTML = css;\n      }\n    }\n  }\n\n  reload() {\n    this.setState({\n      key: this.state.key + 1,\n    });\n  }\n\n  get content() {\n    let content = this.inlinedContent;\n    if (content && (content as any).content) {\n      // GraphQL workaround\n      content = {\n        ...content,\n        data: (content as any).content,\n      };\n    }\n    return content;\n  }\n\n  get useContent() {\n    return this.content || this.state.context.builderContent;\n  }\n\n  render() {\n    const content = this.content;\n\n    const dataString =\n      Builder.isBrowser && this.props.data && size(this.props.data) && hash(this.props.data);\n    let key = Builder.isEditing ? this.name : this.props.entry;\n    if (key && !Builder.isEditing && dataString && dataString.length < 300) {\n      key += ':' + dataString;\n    }\n\n    const WrapComponent = this.props.dataOnly ? React.Fragment : 'div';\n\n    const contentId = this.useContent?.id;\n\n    return (\n      // TODO: data attributes for model, id, etc?\n      <WrapComponent\n        onClick={event => {\n          // Prevent propagation from the root content component when editing to prevent issues\n          // like client side routing triggering when links are clicked, unless this behavior is\n          // disabled with the stopClickPropagationWhenEditing prop\n          if (\n            Builder.isEditing &&\n            !this.props.isChild &&\n            !this.props.stopClickPropagationWhenEditing\n          ) {\n            event.stopPropagation();\n          }\n        }}\n        className={`builder-component ${contentId ? `builder-component-${contentId}` : ''}`}\n        data-name={this.name}\n        data-source=\"Rendered by Builder.io\"\n        key={this.state.key}\n        ref={ref => (this.ref = ref)}\n      >\n        <BuilderMetaContext.Consumer>\n          {value => (\n            <BuilderMetaContext.Provider\n              value={\n                typeof this.props.ampMode === 'boolean'\n                  ? {\n                      ...value,\n                      ampMode: this.props.ampMode,\n                    }\n                  : value\n              }\n            >\n              <BuilderAsyncRequestsContext.Consumer>\n                {value => {\n                  this._asyncRequests = value && value.requests;\n                  this._errors = value && value.errors;\n                  this._logs = value && value.logs;\n\n                  return (\n                    <BuilderContent\n                      isStatic={this.props.isStatic || Builder.isStatic}\n                      key={\n                        this.inlinedContent?.id ||\n                        ('content' in this.props && !this.isPreviewing\n                          ? 'null-content-prop'\n                          : 'no-content-prop')\n                      }\n                      builder={this.builder}\n                      ref={ref => (this.contentRef = ref)}\n                      // TODO: pass entry in\n                      contentLoaded={(data, content) => this.onContentLoaded(data, content)}\n                      options={{\n                        key,\n                        entry: this.props.entry,\n                        ...(content && { initialContent: [content] }),\n                        ...(!content &&\n                          'content' in this.props &&\n                          !this.isPreviewing && { initialContent: [] }),\n                        ...(this.props.url && { url: this.props.url }),\n                        ...this.props.options,\n                        ...(this.options.codegen && {\n                          format: 'react',\n                        }),\n                      }}\n                      inline={\n                        this.props.inlineContent || (!this.isPreviewing && 'content' in this.props)\n                      }\n                      contentError={this.props.contentError}\n                      modelName={this.name || 'page'}\n                    >\n                      {(data, loading, fullData) => {\n                        if (this.props.dataOnly) {\n                          return null;\n                        }\n\n                        if (fullData && fullData.id) {\n                          this.state.context.builderContent = fullData;\n                        }\n                        if (Builder.isBrowser) {\n                          Builder.nextTick(() => {\n                            this.checkStyles(data);\n                          });\n                        }\n\n                        const { codegen } = this.options;\n\n                        if (codegen && !this.Component && data?.blocksJs) {\n                          const builderComponentNames: string[] = Array.from(\n                            new Set(Builder.components.map((item: any) => item.name))\n                          );\n                          const reversedcomponents = Builder.components.slice().reverse();\n\n                          const builderComponents = builderComponentNames.map(name =>\n                            reversedcomponents.find((item: any) => item.class && item.name === name)\n                          );\n\n                          const useBuilderState = (initialState: any) => {\n                            const [, setTick] = React.useState(0);\n                            const [state] = React.useState(() =>\n                              onChange(initialState, function () {\n                                setTick(tick => tick + 1);\n                              })\n                            );\n\n                            return state;\n                          };\n\n                          const mappedComponentNames = builderComponentNames.map(name =>\n                            (name || '').replace(/[^\\w]+/gi, '')\n                          );\n\n                          const finalizedComponents = builderComponents.map(info =>\n                            wrapComponent(info)\n                          );\n\n                          this.Component = new Function(\n                            'jsx',\n                            '_css',\n                            'Builder',\n                            'builder',\n                            'React',\n                            'useBuilderState',\n                            ...mappedComponentNames,\n                            data.blocksJs\n                          )(\n                            jsx,\n                            css,\n                            Builder,\n                            builder,\n                            React,\n                            useBuilderState,\n                            ...finalizedComponents\n                          );\n                        }\n\n                        // TODO: loading option - maybe that is what the children is or component prop\n                        // TODO: get rid of all these wrapper divs\n                        return data ? (\n                          <div\n                            data-builder-component={this.name}\n                            data-builder-content-id={fullData.id}\n                            data-builder-variation-id={\n                              fullData.testVariationId || fullData.variationId || fullData.id\n                            }\n                          >\n                            {!codegen && this.getCss(data) && (\n                              <style\n                                ref={ref => (this.styleRef = ref)}\n                                className=\"builder-custom-styles\"\n                                dangerouslySetInnerHTML={{\n                                  __html: this.getCss(data),\n                                }}\n                              />\n                            )}\n                            <BuilderStoreContext.Provider\n                              value={{\n                                ...this.state,\n                                rootState: this.rootState,\n                                state: this.data,\n                                content: fullData,\n                                renderLink: this.props.renderLink,\n                              }}\n                            >\n                              {codegen && this.Component ? (\n                                <this.Component data={this.data} context={this.state.context} />\n                              ) : (\n                                <BuilderBlocks\n                                  key={String(!!data?.blocks?.length)}\n                                  emailMode={this.props.emailMode}\n                                  fieldName=\"blocks\"\n                                  blocks={data.blocks}\n                                />\n                              )}\n                            </BuilderStoreContext.Provider>\n                          </div>\n                        ) : loading ? (\n                          <div data-builder-component={this.name} className=\"builder-loading\">\n                            {this.props.children}\n                          </div>\n                        ) : (\n                          <div data-builder-component={this.name} className=\"builder-no-content\" />\n                        );\n                      }}\n                    </BuilderContent>\n                  );\n                }}\n              </BuilderAsyncRequestsContext.Consumer>\n            </BuilderMetaContext.Provider>\n          )}\n        </BuilderMetaContext.Consumer>\n      </WrapComponent>\n    );\n  }\n\n  evalExpression(expression: string) {\n    const { data } = this;\n    return expression.replace(/{{([^}]+)}}/g, (match, group) => tryEval(group, data, this._errors));\n  }\n\n  async handleRequest(propertyName: string, url: string) {\n    // TODO: Builder.isEditing = just checks if iframe and parent page is this.builder.io or localhost:1234\n    if (Builder.isIframe && fetchCache[url]) {\n      this.updateState(ctx => {\n        ctx[propertyName] = fetchCache[url];\n      });\n      return fetchCache[url];\n    }\n    const request = async () => {\n      const requestStart = Date.now();\n      if (!Builder.isBrowser) {\n        console.time('Fetch ' + url);\n      }\n      let json: any;\n      try {\n        const result = await fetch(url);\n        json = await result.json();\n      } catch (err) {\n        if (this._errors) {\n          this._errors.push(err);\n        }\n        if (this._logs) {\n          this._logs.push(`Fetch to ${url} errored in ${Date.now() - requestStart}ms`);\n        }\n        return;\n      } finally {\n        if (!Builder.isBrowser) {\n          console.timeEnd('Fetch ' + url);\n          if (this._logs) {\n            this._logs.push(`Fetched ${url} in ${Date.now() - requestStart}ms`);\n          }\n        }\n      }\n\n      if (json) {\n        if (Builder.isIframe) {\n          fetchCache[url] = json;\n        }\n        // TODO: debounce next tick all of these when there are a bunch\n        this.updateState(ctx => {\n          ctx[propertyName] = json;\n        });\n      }\n\n      return json;\n    };\n    const existing =\n      this._asyncRequests &&\n      (this._asyncRequests.find(\n        req => isRequestInfo(req) && req.url === url\n      ) as RequestInfo | null);\n    if (existing) {\n      const promise = existing.promise;\n      promise.then(json => {\n        if (json) {\n          this.updateState(ctx => {\n            ctx[propertyName] = json;\n          });\n        }\n      });\n      return promise;\n    }\n    const promise = request();\n    Builder.nextTick(() => {\n      if (this._asyncRequests) {\n        this._asyncRequests.push(promise);\n      }\n    });\n    return promise;\n  }\n\n  unsubscribe() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n      this.subscriptions = new Subscription();\n    }\n  }\n\n  handleBuilderRequest(propertyName: string, optionsString: string) {\n    const options = tryEval(optionsString, this.data, this._errors);\n    // TODO: this will screw up for multiple bits of data\n    if (this.subscriptions) {\n      this.unsubscribe();\n    }\n    // TODO: don't unsubscribe and resubscribe every time data changes, will make a TON of requests if that's the case when editing...\n    // I guess will be cached then\n    if (options) {\n      // TODO: unsubscribe on destroy\n      this.subscriptions.add(\n        this.builder.queueGetContent(options.model, options).subscribe(matches => {\n          if (matches) {\n            this.updateState(ctx => {\n              ctx[propertyName] = matches;\n            });\n          }\n        })\n      );\n    }\n  }\n\n  onContentLoaded = (data: any, content: Content) => {\n    if (this.name === 'page' && Builder.isBrowser) {\n      if (data) {\n        const { title, pageTitle, description, pageDescription } = data;\n\n        if (title || pageTitle) {\n          document.title = title || pageTitle;\n        }\n\n        if (description || pageDescription) {\n          let descriptionTag = document.querySelector('meta[name=\"description\"]');\n\n          if (!descriptionTag) {\n            descriptionTag = document.createElement('meta');\n            descriptionTag.setAttribute('name', 'description');\n            document.head.appendChild(descriptionTag);\n          }\n\n          descriptionTag.setAttribute('content', description || pageDescription);\n        }\n      }\n    }\n\n    if (Builder.isEditing) {\n      this.notifyStateChange();\n    }\n\n    // Unsubscribe all? TODO: maybe don't continuous fire when editing.....\n    if (this.props.contentLoaded) {\n      this.props.contentLoaded(data, content);\n    }\n\n    if (data && data.inputs && Array.isArray(data.inputs) && data.inputs.length) {\n      if (!data.state) {\n        data.state = {};\n      }\n\n      // Maybe...\n      // if (data.context) {\n      //   Object.assign(this.state.context, data.context)\n      // }\n      // TODO: may not want this... or make sure anything overriden\n      // explitily sets to null\n      data.inputs.forEach((input: any) => {\n        if (input) {\n          if (\n            input.name &&\n            input.defaultValue !== undefined &&\n            data.state[input.name] === undefined\n          ) {\n            data.state[input.name] = input.defaultValue;\n          }\n        }\n      });\n    }\n\n    if (data && data.state) {\n      const newState = {\n        ...this.state,\n        updates: ((this.state && this.state.updates) || 0) + 1,\n        state: Object.assign(this.rootState, {\n          ...this.state.state,\n          location: this.locationState,\n          deviceSize: this.deviceSizeState,\n          device: this.device,\n          ...data.state,\n          ...this.props.data,\n        }),\n      };\n      if (this.mounted) {\n        this.setState(newState);\n      } else {\n        this.state = newState;\n      }\n    }\n\n    // TODO: also throttle on edits maybe\n    if (data && data.jsCode && Builder.isBrowser && !this.options.codegen) {\n      // Don't rerun js code when editing and not changed\n      let skip = false;\n      if (Builder.isEditing) {\n        if (this.lastJsCode === data.jsCode) {\n          skip = true;\n        } else {\n          this.lastJsCode = data.jsCode;\n        }\n      }\n\n      if (!skip) {\n        const state = this.state.state;\n\n        // TODO: real editing method\n        try {\n          const result = new Function(\n            'data',\n            'ref',\n            'state',\n            'update',\n            'element',\n            'Builder',\n            'builder',\n            'context',\n            data.jsCode\n          )(data, this, state, this.state.update, this.ref, Builder, builder, this.state.context);\n\n          // TODO: allow exports = { } syntax?\n          // TODO: do something with reuslt like view - methods, computed, actions, properties, template, etc etc\n        } catch (error) {\n          if (Builder.isBrowser) {\n            console.warn(\n              'Builder custom code error:',\n              error.message,\n              'in',\n              data.jsCode,\n              error.stack\n            );\n          } else {\n            if (process.env.DEBUG) {\n              console.debug(\n                'Builder custom code error:',\n                error.message,\n                'in',\n                data.jsCode,\n                error.stack\n              );\n            }\n            // Add to req.options.errors to return to client\n          }\n        }\n      }\n    }\n\n    if (data && data.httpRequests /* || data.builderData @DEPRECATED */ && !this.props.noAsync) {\n      // Don't rerun http requests when editing and not changed\n      // No longer needed?\n      let skip = false;\n\n      if (!skip) {\n        // TODO: another structure for this\n        for (const key in data.httpRequests) {\n          const url: string | undefined = data.httpRequests[key];\n          if (url && (!this.data[key] || Builder.isEditing)) {\n            // TODO: if Builder.isEditing and url patches https://builder.io/api/v2/content/{editingModel}\n            // Then use this.builder.get().subscribe(...)\n            if (Builder.isBrowser) {\n              const finalUrl = this.evalExpression(url);\n              if (Builder.isEditing && this.lastHttpRequests[key] === finalUrl) {\n                continue;\n              }\n              this.lastHttpRequests[key] = finalUrl;\n              const builderModelRe = /builder\\.io\\/api\\/v2\\/([^\\/\\?]+)/i;\n              const builderModelMatch = url.match(builderModelRe);\n              const model = builderModelMatch && builderModelMatch[1];\n              if (false && Builder.isEditing && model && this.builder.editingModel === model) {\n                this.handleRequest(key, finalUrl);\n                // TODO: fix this\n                // this.subscriptions.add(\n                //   this.builder.get(model).subscribe(data => {\n                //     this.state.update((state: any) => {\n                //       state[key] = data\n                //     })\n                //   })\n                // )\n              } else {\n                this.handleRequest(key, finalUrl);\n                const currentSubscription = this.httpSubscriptionPerKey[key];\n                if (currentSubscription) {\n                  currentSubscription.unsubscribe();\n                }\n\n                // TODO: fix this\n                const newSubscription = (this.httpSubscriptionPerKey[key] =\n                  this.onStateChange.subscribe(() => {\n                    const newUrl = this.evalExpression(url);\n                    if (newUrl !== finalUrl) {\n                      this.handleRequest(key, newUrl);\n                      this.lastHttpRequests[key] = newUrl;\n                    }\n                  }));\n                this.subscriptions.add(newSubscription);\n              }\n            } else {\n              this.handleRequest(key, this.evalExpression(url));\n            }\n          }\n        }\n\n        // @DEPRECATED\n        // for (const key in data.builderData) {\n        //   const url = data.builderData[key]\n        //   if (url && !this.data[key]) {\n        //     this.handleBuilderRequest(key, this.evalExpression(url))\n        //   }\n        // }\n      }\n    }\n  };\n}\n","import React from 'react';\nimport { BuilderElement } from '@builder.io/sdk';\nimport { BuilderBlock } from '../components/builder-block.component';\n\n/**\n * Higher order component for passing Builder.io children as React children\n *\n * @example\n * ```tsx\n *\n *    const MyButton = props => <Button>\n *      {children}\n *    </Button>\n *\n *    const ButtonWithBuilderChildren = withChildren(MyButton)\n *\n *    Builder.registerComponent(ButtonWithBuilderChildren, {\n *      name: 'MyButton',\n *      defaultChildren: [\n *        {\n *          '@type': '@builder.io/sdk:Element'\n *        }\n *      ]\n *    })\n * ```\n */\nexport const withChildren = <P extends object>(Component: React.ComponentType<P>) => {\n  const HOC = React.forwardRef<any, React.PropsWithChildren<P> & { builderBlock?: BuilderElement }>(\n    (props, ref) => {\n      const children =\n        props.children ||\n        (props.builderBlock &&\n          props.builderBlock.children &&\n          props.builderBlock.children.map(child => <BuilderBlock key={child.id} block={child} />));\n\n      return (\n        <Component {...props} ref={ref}>\n          {children}\n        </Component>\n      );\n    }\n  );\n\n  (HOC as any).builderOptions = {\n    canHaveChildren: true,\n  };\n\n  return HOC;\n};\n","import './scripts/init-editing';\n\nimport { builder, Builder } from '@builder.io/sdk';\nexport { BuilderElement } from '@builder.io/sdk';\n\nBuilder.isReact = true;\n\nexport { BuilderBlocks } from './components/builder-blocks.component';\nexport { BuilderBlock as BuilderBlockComponent } from './components/builder-block.component';\nexport { BuilderContent } from './components/builder-content.component';\nimport { BuilderComponent } from './components/builder-component.component';\nexport { BuilderStoreContext } from './store/builder-store';\nexport { BuilderMetaContext } from './store/builder-meta';\nexport { BuilderAsyncRequestsContext } from './store/builder-async-requests';\nexport { withChildren } from './functions/with-children';\n\nexport { BuilderComponent as BuilderPage };\nexport { BuilderComponent };\n\nexport { stringToFunction } from './functions/string-to-function';\n\nexport { builder, Builder };\nexport default builder;\n"],"names":["window","parent","postMessage","type","data","value","supportsPatchUpdates","priorVersion","version","sizeNames","sizes","xsmall","min","default","max","small","medium","large","getWidthForSize","size","this","getSizeForWidth","width","sizeNames_1","_i","set","obj","_path","Object","path","Array","isArray","toString","match","slice","reduce","a","c","i","Math","abs","Number","length","safeDynamicRequire","Builder","isServer","eval","fnCache","api","state","builder","stringToFunction","str","expression","errors","logs","trim","cacheKey","useReturn","includes","startsWith","fn","isBrowser","Function","error","push","message","indexOf","console","warn","final","args","VM","event_1","timeout","sandbox","event","run","replace","stack","process","env","DEBUG","debug","isPromise","thing","then","isRequestInfo","BuilderAsyncRequestsContext","React","createContext","requests","BuilderStoreContext","rootState","content","context","update","mutator","applyPatchWithMinimalMutationChain","patch","preserveRoot","op","pathArr","split","shift","newObj","objPart","isLast","property","index","splice","nextProperty","newPart","String","htmlEscape","blockToHtmlString","block","tagName","id","class","keys","properties","map","key","join","component","name","options","text","children","item","Link","props","Consumer","renderLink","camelCaseToKebabCase","g","toLowerCase","kebabCaseToCamelCase","toUpperCase","Device","desktop","tablet","mobile","blocksMap","voidElements","Set","last","arr","omit","values","newObject","assign","values_1","cssCase","fastClone","JSON","parse","stringify","capitalize","_this","hasError","updates","selection","setTimeout","$block","$blocks","patches","location","href","newBlock","patches_1","setState","__extends","BuilderBlock","privateState","errorInfo","_errors","_logs","initialAnimationStepStyles","animation","animations","trigger","firstStep","steps","stepStyles","styles","reversedNames","reverse","self","responsiveStyles","reversedNames_1","emailMode","&.builder-block","hoverAnimation","find","transition","duration","easing","delay","transitionDelay","undefined","isEditing","removeEventListener","onWindowMessage","addEventListener","bindings","animator","bindAnimations","filter","elementId","InnerComponent","_f","TagName","html","jsx","dangerouslySetInnerHTML","__html","componentName","componentInfo","tag","components","style","hide","show","actions","useState","Proxy","prop","innerComponentProperties","isVoid","has","noWrap","fragment","styleStr","attr","styleSplit_1","stylePieces","finalOptions","_spacer","_a","builder-index","memo","Fragment","ClassNames","css","addClass","emotionCss","className","_asyncRequests","attributes","builderBlock","builderState","fieldName","child","repeat","collection","collectionPath","collectionName","itemName_1","itemName","array","childState","$index","$item","Provider","__assign","getElement","display","padding","color","fontSize","fontStyle","contents","Component","isIframe","noBlocks","parentElementId","parentId","dataPath","BuilderBlocks","blocks","flexDirection","alignItems","onClick","onClickEmptyBlocks","onMouseEnter","onHoverEmptyBlocks","elementOrSelector","element","document","querySelector","Element","ReactDOM","render","NoWrap","getData","blocksString","hasBlocks","newData","variantsScript","variantsString","contentId","VariantsProvider","initialContent","canTrack","Boolean","variations","variants","allVariants","variantsJson_1","testRatio","React.createElement","React.Fragment","cookieName","variantId","getCookie","n","random","variant","setCookie","loading","getContentWithInfo","noEditorUpdates","contentLoaded","Subscription","reactEvent","nativeEvent","autoTrack","trackInteraction","renderedVariantId","clicked","BuilderContent","model","modelName","isStatic","variationId","inline","firstLoad","subscribeToContent","contentData","trackImpression","subscriptions","add","queueGetContent","subscribe","matches","addedObserver","IntersectionObserver","ref","intersectionObserver","entries","observer","forEach","entry","intersectionRatio","trackedImpression","unobserve","observe","err","contentError","unsubscribe","dataOnly","useData","renderScript","Tag","data-template-variant-id","cookieValue","cookieVariation","variationName","testVariationId","testVariationName","defineProperty","exports","TARGET","Symbol","UNSUBSCRIBE","concatPath","shallowClone","onChange","object","applyPath","applyPrevious","proxyTarget","inApply","changed","isUnsubscribed","equals","is","propCache","WeakMap","pathCache","proxyCache","handleChange","previous","item_1","callback","walkPath","invalidateCachedDescriptor","target","get","delete","buildProxy","proxy","handler","ignoreChange","ignoreSymbols","receiver","Reflect","isPrimitive","RegExp","isBuiltinWithoutMutableMethods","isShallow","descriptor","Map","getOwnPropertyDescriptor","configurable","writable","ignore","result","deleteProperty","apply","thisArg","argumentsList","compare","Date","valueOf","call","lastIndexOf","bind","module","nextTick","debounceNextTick","debounceNextTickImpl","enumerable","arguments","next","throttle","func","wait","later","leading","now","remaining","clearTimeout","trailing","BuilderMetaContext","ampMode","pick","ret","wrapComponent","info","builderTag","inputNames","concat","inputs","baseProps","inputProps","debounce","immediate","fontsLoaded","fetch","require","sizeMap","fetchCache","tryEval","searchToObject","pairs","search","substring","pair","decodeURIComponent","_super","BehaviorSubject","updateState","data_1","_b","deviceSize","deviceSizeState","resizeFn","mounted","notifyStateChange","title","pageTitle","description","pageDescription","descriptionTag","createElement","setAttribute","head","appendChild","input","defaultValue","newState","locationState","device","jsCode","codegen","skip","lastJsCode","httpRequests","noAsync","url","finalUrl_1","evalExpression","lastHttpRequests","builderModelMatch","handleRequest","currentSubscription","httpSubscriptionPerKey","newSubscription","onStateChange","newUrl","apiKey","inlinedContent","_hydrate","hydrate","getHtmlData","onContentLoaded","BuilderComponent","defaults","isPreviewing","inlineContent","script","innerText","getUserAttributes","pathname","query","innerWidth","fresh","exists","classList","contains","shouldHydrate","innerHTML","apiStyles_1","previousElementSibling","keepStyles_1","el","useElement","useEl","div","insertAdjacentElement","val_1","builderRootRef","val","asServer","resizeListener","messageListener","dispatchEvent","CustomEvent","detail","previewingModel","nextState","font","family","kind","fileUrl","files","regular","weight","weightUrl","allowCustomFonts","customFonts","getCssFromFont","useContent","cssCode","getFontCss","prevProps","styleRef","css_1","getCss","builderContent","dataString","hash","WrapComponent","isChild","stopClickPropagationWhenEditing","stopPropagation","contentRef","format","fullData","checkStyles","blocksJs","builderComponentNames","from","reversedcomponents_1","builderComponents","mappedComponentNames","finalizedComponents","initialState","setTick","group","propertyName","ctx","request","requestStart","time","json","err_1","timeEnd","existing","req","promise_1","promise","optionsString","__decorate","withChildren","HOC","forwardRef","builderOptions","canHaveChildren","isReact"],"mappings":"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"}